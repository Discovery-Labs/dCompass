/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SponsorPassSFT,
  SponsorPassSFTInterface,
} from "../SponsorPassSFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_initStakeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "address payable",
        name: "_projectNFTAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DIAMOND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SILVER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectId",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "projByWallet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setStakeAmounts",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakeAmounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "newLevel",
        type: "uint256",
      },
    ],
    name: "updateLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "walletByProj",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200210f3803806200210f8339810160408190526200003491620001c1565b6040518060800160405280605c8152602001620020b3605c91396200005981620000e5565b5060005b6003811015620000bd578281815181106200007c576200007c62000331565b602002602001015160036000836001620000979190620002a5565b815260208101919091526040016000205580620000b481620002fd565b9150506200005d565b50600480546001600160a01b0319166001600160a01b0392909216919091179055506200035d565b8051620000fa906002906020840190620000fe565b5050565b8280546200010c90620002c0565b90600052602060002090601f0160209004810192826200013057600085556200017b565b82601f106200014b57805160ff19168380011785556200017b565b828001600101855582156200017b579182015b828111156200017b5782518255916020019190600101906200015e565b50620001899291506200018d565b5090565b5b808211156200018957600081556001016200018e565b80516001600160a01b0381168114620001bc57600080fd5b919050565b60008060408385031215620001d557600080fd5b82516001600160401b0380821115620001ed57600080fd5b818501915085601f8301126200020257600080fd5b815160208282111562000219576200021962000347565b8160051b604051601f19603f8301168101818110868211171562000241576200024162000347565b604052838152828101945085830182870184018b10156200026157600080fd5b600096505b848710156200028657805186526001969096019594830194830162000266565b509650620002989050878201620001a4565b9450505050509250929050565b60008219821115620002bb57620002bb6200031b565b500190565b600181811c90821680620002d557607f821691505b60208210811415620002f757634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200031457620003146200031b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b611d46806200036d6000396000f3fe608060405234801561001057600080fd5b506004361061010a5760003560e01c80634e1273f4116100a2578063e3e55f0811610071578063e3e55f0814610262578063e67e402c1461026a578063e985e9c51461027d578063f149444b146102b9578063f242432a146102cc57600080fd5b80634e1273f4146101d05780638f58ecc1146101f0578063a22cb46514610203578063db68581a1461021657600080fd5b8063206545c2116100de578063206545c21461019857806323ac4069146101a05780632eb2c2d6146101b35780633e4bee38146101c857600080fd5b8062fdd58e1461010f57806301ffc9a7146101355780630e89341c146101585780631c1b4f3a14610178575b600080fd5b61012261011d3660046116de565b6102df565b6040519081526020015b60405180910390f35b6101486101433660046117f6565b610376565b604051901515815260200161012c565b61016b6101663660046118ef565b6103c8565b60405161012c9190611ab1565b6101226101863660046118ef565b60036020526000908152604090205481565b610122600381565b61016b6101ae366004611543565b61045c565b6101c66101c1366004611598565b6104f6565b005b610122600281565b6101e36101de366004611708565b610545565b60405161012c9190611a6d565b6101c66101fe36600461195f565b61066f565b6101c66102113660046116a7565b61079f565b61024a610224366004611830565b80516020818301810180516006825292820191909301209152546001600160a01b031681565b6040516001600160a01b03909116815260200161012c565b610122600181565b6101c6610278366004611908565b6107ae565b61014861028b366004611565565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101c66102c73660046119be565b61088f565b6101c66102da366004611642565b610a4f565b60006001600160a01b0383166103505760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103a757506001600160e01b031982166303a24d0760e21b145b806103c257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103d790611b7e565b80601f016020809104026020016040519081016040528092919081815260200182805461040390611b7e565b80156104505780601f1061042557610100808354040283529160200191610450565b820191906000526020600020905b81548152906001019060200180831161043357829003601f168201915b50505050509050919050565b6007602052600090815260409020805461047590611b7e565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190611b7e565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505081565b60405162461bcd60e51b815260206004820181905260248201527f455243313135353a206c6f636b696e67206261746368205472616e73666572736044820152606401610347565b5050505050565b606081518351146105aa5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610347565b6000835167ffffffffffffffff8111156105c6576105c6611c2d565b6040519080825280602002602001820160405280156105ef578160200160208202803683370190505b50905060005b84518110156106675761063a85828151811061061357610613611c17565b602002602001015185838151811061062d5761062d611c17565b60200260200101516102df565b82828151811061064c5761064c611c17565b602090810291909101015261066081611be6565b90506105f5565b509392505050565b6004546001600160a01b031633146106c95760405162461bcd60e51b815260206004820152601d60248201527f696e76616c696420636f6e74726163742063616c6c696e67206d696e740000006044820152606401610347565b6006826040516106d99190611a0c565b908152604051908190036020019020546001600160a01b0384811691161461074e5760405162461bcd60e51b815260206004820152602260248201527f6e6f742077616c6c6574206173736f63696174656420776974682070726f6a6560448201526118dd60f21b6064820152608401610347565b61075a83856001610d52565b8060058360405161076b9190611a0c565b9081526020016040518091039020819055506107998382600160405180602001604052806000815250610ecc565b50505050565b6107aa338383610fd6565b5050565b6004546001600160a01b031633146108085760405162461bcd60e51b815260206004820152601d60248201527f696e76616c696420636f6e74726163742063616c6c696e67206d696e740000006044820152606401610347565b816006826040516108199190611a0c565b908152602001604051809103902060006101000a8154816001600160a01b0302191690836001600160a01b031602179055508260058260405161085c9190611a0c565b90815260200160405180910390208190555061088a8284600160405180602001604052806000815250610ecc565b505050565b600454604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637be5d8d960e11b179052905160009283926001600160a01b03909116916108e89190611a0c565b6000604051808303816000865af19150503d8060008114610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b50915091508161097c5760405162461bcd60e51b815260206004820152601c60248201527f756e7375636365737366756c2070726f6a6563744e46542063616c6c000000006044820152606401610347565b60008180602001905181019061099291906117d9565b9050806109e15760405162461bcd60e51b815260206004820152601960248201527f6e6f7420617070726f76656420617070207265766965776572000000000000006044820152606401610347565b6000851180156109fb57506109f860036001611b3a565b85105b610a3a5760405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590817dd1bdad95b925960821b6044820152606401610347565b50505060009182526003602052604090912055565b6001600160a01b038516331480610a6b5750610a6b853361028b565b610ac95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b6064820152608401610347565b600081806020019051810190610adf919061186d565b9050856001600160a01b0316600682604051610afb9190611a0c565b908152604051908190036020019020546001600160a01b031614610b6d5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a2066726f6d206973206e6f742070726f6a6563742077616c6044820152621b195d60ea1b6064820152608401610347565b83600582604051610b7e9190611a0c565b90815260200160405180910390205414610be65760405162461bcd60e51b8152602060048201526024808201527f455243313135353a20696e636f7272656374206c6576656c20666f722070726f6044820152631a9958dd60e21b6064820152608401610347565b610bf386868686866110b7565b6004546040516000916001600160a01b0316907fd57c9c82929c770367e7e304e7ec6a347bf62af8f61f33998c4ad1f3963ef73190610c389085908a90602401611ac4565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051610c769190611a0c565b6000604051808303816000865af19150503d8060008114610cb3576040519150601f19603f3d011682016040523d82523d6000602084013e610cb8565b606091505b5050905080610d095760405162461bcd60e51b815260206004820152601c60248201527f756e7375636365737366756c2070726f6a6563744e46542063616c6c000000006044820152606401610347565b85600683604051610d1a9190611a0c565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050505050565b6001600160a01b038316610db45760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b6064820152608401610347565b33610de481856000610dc587611255565b610dce87611255565b5050604080516020810190915260009052505050565b6000838152602081815260408083206001600160a01b038816845290915290205482811015610e615760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b6064820152608401610347565b6000848152602081815260408083206001600160a01b03898116808652918452828520888703905582518981529384018890529092908616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b038416610f2c5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b6064820152608401610347565b33610f4681600087610f3d88611255565b61053e88611255565b6000848152602081815260408083206001600160a01b038916845290915281208054859290610f76908490611b3a565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461053e816000878787876112a8565b816001600160a01b0316836001600160a01b0316141561104a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610347565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b03841661111b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610347565b3361112b818787610f3d88611255565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156111af5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610347565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906111ec908490611b3a565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461124c8288888888886112a8565b50505050505050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061128f5761128f611c17565b602090810291909101015292915050565b505050505050565b6001600160a01b0384163b156112a05760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112ec9089908990889088908890600401611a28565b602060405180830381600087803b15801561130657600080fd5b505af1925050508015611336575060408051601f3d908101601f1916820190925261133391810190611813565b60015b6113e357611342611c43565b806308c379a0141561137c5750611357611c5f565b80611362575061137e565b8060405162461bcd60e51b81526004016103479190611ab1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610347565b6001600160e01b0319811663f23a6e6160e01b1461124c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610347565b80356001600160a01b038116811461146b57600080fd5b919050565b600082601f83011261148157600080fd5b8135602061148e82611aee565b60405161149b8282611bb9565b8381528281019150858301600585901b870184018810156114bb57600080fd5b60005b858110156114da578135845292840192908401906001016114be565b5090979650505050505050565b600082601f8301126114f857600080fd5b813561150381611b12565b6040516115108282611bb9565b82815285602084870101111561152557600080fd5b82602086016020830137600092810160200192909252509392505050565b60006020828403121561155557600080fd5b61155e82611454565b9392505050565b6000806040838503121561157857600080fd5b61158183611454565b915061158f60208401611454565b90509250929050565b600080600080600060a086880312156115b057600080fd5b6115b986611454565b94506115c760208701611454565b9350604086013567ffffffffffffffff808211156115e457600080fd5b6115f089838a01611470565b9450606088013591508082111561160657600080fd5b61161289838a01611470565b9350608088013591508082111561162857600080fd5b50611635888289016114e7565b9150509295509295909350565b600080600080600060a0868803121561165a57600080fd5b61166386611454565b945061167160208701611454565b93506040860135925060608601359150608086013567ffffffffffffffff81111561169b57600080fd5b611635888289016114e7565b600080604083850312156116ba57600080fd5b6116c383611454565b915060208301356116d381611ce9565b809150509250929050565b600080604083850312156116f157600080fd5b6116fa83611454565b946020939093013593505050565b6000806040838503121561171b57600080fd5b823567ffffffffffffffff8082111561173357600080fd5b818501915085601f83011261174757600080fd5b8135602061175482611aee565b6040516117618282611bb9565b8381528281019150858301600585901b870184018b101561178157600080fd5b600096505b848710156117ab5761179781611454565b835260019690960195918301918301611786565b50965050860135925050808211156117c257600080fd5b506117cf85828601611470565b9150509250929050565b6000602082840312156117eb57600080fd5b815161155e81611ce9565b60006020828403121561180857600080fd5b813561155e81611cfa565b60006020828403121561182557600080fd5b815161155e81611cfa565b60006020828403121561184257600080fd5b813567ffffffffffffffff81111561185957600080fd5b611865848285016114e7565b949350505050565b60006020828403121561187f57600080fd5b815167ffffffffffffffff81111561189657600080fd5b8201601f810184136118a757600080fd5b80516118b281611b12565b6040516118bf8282611bb9565b8281528660208486010111156118d457600080fd5b6118e5836020830160208701611b52565b9695505050505050565b60006020828403121561190157600080fd5b5035919050565b60008060006060848603121561191d57600080fd5b8335925061192d60208501611454565b9150604084013567ffffffffffffffff81111561194957600080fd5b611955868287016114e7565b9150509250925092565b6000806000806080858703121561197557600080fd5b8435935061198560208601611454565b9250604085013567ffffffffffffffff8111156119a157600080fd5b6119ad878288016114e7565b949793965093946060013593505050565b600080604083850312156119d157600080fd5b50508035926020909101359150565b600081518084526119f8816020860160208601611b52565b601f01601f19169290920160200192915050565b60008251611a1e818460208701611b52565b9190910192915050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611a62908301846119e0565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611aa557835183529284019291840191600101611a89565b50909695505050505050565b60208152600061155e60208301846119e0565b604081526000611ad760408301856119e0565b905060018060a01b03831660208301529392505050565b600067ffffffffffffffff821115611b0857611b08611c2d565b5060051b60200190565b600067ffffffffffffffff821115611b2c57611b2c611c2d565b50601f01601f191660200190565b60008219821115611b4d57611b4d611c01565b500190565b60005b83811015611b6d578181015183820152602001611b55565b838111156107995750506000910152565b600181811c90821680611b9257607f821691505b60208210811415611bb357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611bdf57611bdf611c2d565b6040525050565b6000600019821415611bfa57611bfa611c01565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d1115611c5c5760046000803e5060005160e01c5b90565b600060443d1015611c6d5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611c9d57505050505090565b8285019150815181811115611cb55750505050505090565b843d8701016020828501011115611ccf5750505050505090565b611cde60208286010187611bb9565b509095945050505050565b8015158114611cf757600080fd5b50565b6001600160e01b031981168114611cf757600080fdfea26469706673582212202b4f313b1c88bcddb5103a0ec1181c827c20a1e54c6e656e838ab0a07e89f4fd64736f6c6343000807003368747470733a2f2f62616679626569666575356a356135326e366f736c7164766b79736b75687465686171786b6a6977356c62706e69613666616b70776c6b677a32792e697066732e647765622e6c696e6b2f7b69647d2e6a736f6e";

type SponsorPassSFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SponsorPassSFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SponsorPassSFT__factory extends ContractFactory {
  constructor(...args: SponsorPassSFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SponsorPassSFT";
  }

  deploy(
    _initStakeAmounts: BigNumberish[],
    _projectNFTAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SponsorPassSFT> {
    return super.deploy(
      _initStakeAmounts,
      _projectNFTAddr,
      overrides || {}
    ) as Promise<SponsorPassSFT>;
  }
  getDeployTransaction(
    _initStakeAmounts: BigNumberish[],
    _projectNFTAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initStakeAmounts,
      _projectNFTAddr,
      overrides || {}
    );
  }
  attach(address: string): SponsorPassSFT {
    return super.attach(address) as SponsorPassSFT;
  }
  connect(signer: Signer): SponsorPassSFT__factory {
    return super.connect(signer) as SponsorPassSFT__factory;
  }
  static readonly contractName: "SponsorPassSFT";
  public readonly contractName: "SponsorPassSFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SponsorPassSFTInterface {
    return new utils.Interface(_abi) as SponsorPassSFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SponsorPassSFT {
    return new Contract(address, _abi, signerOrProvider) as SponsorPassSFT;
  }
}
