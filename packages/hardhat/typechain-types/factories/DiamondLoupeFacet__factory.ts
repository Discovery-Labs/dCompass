/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100bd5780637a0ed627146100d2578063adfca15e146100e7578063cdffacc614610107575b600080fd5b6100a861006a36600461088d565b6001600160e01b03191660009081527f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667b602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100c561015f565b6040516100b491906108fc565b6100da610301565b6040516100b4919061095c565b6100fa6100f536600461085d565b610714565b6040516100b49190610949565b61014761011536600461088d565b6001600160e01b0319166000908152600080516020610a5783398151915260205260409020546001600160a01b031690565b6040516001600160a01b0390911681526020016100b4565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54606090600080516020610a57833981519152908067ffffffffffffffff8111156101ad576101ad610a40565b6040519080825280602002602001820160405280156101d6578160200160208202803683370190505b5092506000805b828110156102f75760008460010182815481106101fc576101fc610a2a565b6000918252602080832060088304015460079092166004026101000a90910460e01b6001600160e01b0319811683529087905260408220549092506001600160a01b031690805b858110156102995788818151811061025d5761025d610a2a565b60200260200101516001600160a01b0316836001600160a01b031614156102875760019150610299565b80610291816109d9565b915050610243565b5080156102a957506102e5915050565b818886815181106102bc576102bc610a2a565b6001600160a01b0390921660209283029190910190910152846102de816109d9565b9550505050505b806102ef816109d9565b9150506101dd565b5080845250505090565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54606090600080516020610a57833981519152908067ffffffffffffffff81111561034f5761034f610a40565b60405190808252806020026020018201604052801561039557816020015b60408051808201909152600081526060602082015281526020019060019003908161036d5790505b50925060008167ffffffffffffffff8111156103b3576103b3610a40565b6040519080825280602002602001820160405280156103dc578160200160208202803683370190505b5090506000805b838110156106a257600085600101828154811061040257610402610a2a565b6000918252602080832060088304015460079092166004026101000a90910460e01b6001600160e01b0319811683529088905260408220549092506001600160a01b031690805b8581101561056757826001600160a01b03168a828151811061046d5761046d610a2a565b6020026020010151600001516001600160a01b0316141561055557838a828151811061049b5761049b610a2a565b6020026020010151602001518883815181106104b9576104b9610a2a565b602002602001015160ff16815181106104d4576104d4610a2a565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff87828151811061050a5761050a610a2a565b602002602001015160ff161061051f57600080fd5b86818151811061053157610531610a2a565b602002602001018051809190610546906109f4565b60ff1690525060019150610567565b8061055f816109d9565b915050610449565b5080156105775750610690915050565b8189868151811061058a5761058a610a2a565b60209081029190910101516001600160a01b0390911690528667ffffffffffffffff8111156105bb576105bb610a40565b6040519080825280602002602001820160405280156105e4578160200160208202803683370190505b508986815181106105f7576105f7610a2a565b6020026020010151602001819052508289868151811061061957610619610a2a565b60200260200101516020015160008151811061063757610637610a2a565b60200260200101906001600160e01b03191690816001600160e01b03191681525050600186868151811061066d5761066d610a2a565b60ff9092166020928302919091019091015284610689816109d9565b9550505050505b8061069a816109d9565b9150506103e3565b5060005b818110156107095760008382815181106106c2576106c2610a2a565b602002602001015160ff16905060008783815181106106e3576106e3610a2a565b602002602001015160200151905081815250508080610701906109d9565b9150506106a6565b508085525050505090565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54606090600080516020610a578339815191529060008167ffffffffffffffff81111561076457610764610a40565b60405190808252806020026020018201604052801561078d578160200160208202803683370190505b50935060005b828110156108525760008460010182815481106107b2576107b2610a2a565b6000918252602080832060088304015460079092166004026101000a90910460e01b6001600160e01b031981168352908790526040909120549091506001600160a01b0390811690881681141561083d578187858151811061081657610816610a2a565b6001600160e01b03199092166020928302919091019091015283610839816109d9565b9450505b5050808061084a906109d9565b915050610793565b508352509092915050565b60006020828403121561086f57600080fd5b81356001600160a01b038116811461088657600080fd5b9392505050565b60006020828403121561089f57600080fd5b81356001600160e01b03198116811461088657600080fd5b600081518084526020808501945080840160005b838110156108f15781516001600160e01b031916875295820195908201906001016108cb565b509495945050505050565b6020808252825182820181905260009190848201906040850190845b8181101561093d5783516001600160a01b031683529284019291840191600101610918565b50909695505050505050565b60208152600061088660208301846108b7565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156109cb57888303603f19018552815180516001600160a01b031684528701518784018790526109b8878501826108b7565b9588019593505090860190600101610983565b509098975050505050505050565b60006000198214156109ed576109ed610a14565b5060010190565b600060ff821660ff811415610a0b57610a0b610a14565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566679a26469706673582212200014764cfa40173ae1df2cbfe01ab9b43344aaa69bb3fcd2f5a47ffd36b63f8f64736f6c63430008070033";

type DiamondLoupeFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondLoupeFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(...args: DiamondLoupeFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DiamondLoupeFacet";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }
  static readonly contractName: "DiamondLoupeFacet";
  public readonly contractName: "DiamondLoupeFacet";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
