/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AdventurerNFT,
  AdventurerNFTInterface,
} from "../../contracts/AdventurerNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_objectId",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_isPathway",
        type: "bool",
      },
      {
        internalType: "string",
        name: "_parentId",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPathway",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "objectId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600b81526a1910dbdb5c185cdcd3919560aa1b6020808301918252835180850190945260088452671110d3d35413919560c21b908401528151919291620000659160009162000096565b5080516200007b90600190602084019062000096565b5050600d80546001600160a01b031916331790555062000179565b828054620000a4906200013c565b90600052602060002090601f016020900481019282620000c8576000855562000113565b82601f10620000e357805160ff191683800117855562000113565b8280016001018555821562000113579182015b8281111562000113578251825591602001919060010190620000f6565b506200012192915062000125565b5090565b5b8082111562000121576000815560010162000126565b600181811c908216806200015157607f821691505b602082108114156200017357634e487b7160e01b600052602260045260246000fd5b50919050565b61226580620001896000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b8578063c45a01551161007c578063c45a01551461028b578063c87b56dd1461029e578063d3fc9864146102b1578063d4d5a06d146102c4578063e8879c45146102cc578063e985e9c5146102df57600080fd5b80636352211e1461023757806370a082311461024a57806395d89b411461025d578063a22cb46514610265578063b88d4fde1461027857600080fd5b8063186e811b1161010a578063186e811b146101d657806323b872dd146101de5780632f745c59146101f157806342842e0e146102045780634f6ccce714610217578063623903d21461022a57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af57806318160ddd146101c4575b600080fd5b61015a610155366004611d85565b61031b565b60405190151581526020015b60405180910390f35b61017761032c565b6040516101669190611fb6565b610197610192366004611e29565b610363565b6040516001600160a01b039091168152602001610166565b6101c26101bd366004611d00565b6103f0565b005b6009545b604051908152602001610166565b610177610506565b6101c26101ec366004611c0a565b610594565b6101c86101ff366004611d00565b6105c5565b6101c2610212366004611c0a565b61065b565b6101c8610225366004611e29565b610676565b60105461015a9060ff1681565b610197610245366004611e29565b610709565b6101c8610258366004611b97565b610780565b610177610807565b6101c2610273366004611ccb565b610813565b6101c2610286366004611c4b565b610822565b600e54610197906001600160a01b031681565b6101776102ac366004611e29565b61085a565b6101c86102bf366004611d2c565b610865565b610177610ae0565b6101c26102da366004611dbf565b610aed565b61015a6102ed366004611bd1565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061032682610bab565b92915050565b60606000610338610bd0565b905080600f60405160200161034e929190611eb9565b60405160208183030381529060405291505090565b600061036e82610c62565b6103d45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103fb82610709565b9050806001600160a01b0316836001600160a01b031614156104695760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103cb565b336001600160a01b0382161480610485575061048581336102ed565b6104f75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103cb565b6105018383610c7f565b505050565b6011805461051390612129565b80601f016020809104026020016040519081016040528092919081815260200182805461053f90612129565b801561058c5780601f106105615761010080835404028352916020019161058c565b820191906000526020600020905b81548152906001019060200180831161056f57829003601f168201915b505050505081565b61059e3382610ced565b6105ba5760405162461bcd60e51b81526004016103cb90612069565b610501838383610dd7565b60006105d083610780565b82106106325760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103cb565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b61050183838360405180602001604052806000815250610822565b600061068160095490565b82106106e45760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103cb565b600982815481106106f7576106f76121d5565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103265760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103cb565b60006001600160a01b0382166107eb5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103cb565b506001600160a01b031660009081526003602052604090205490565b60606000610338610f7e565b61081e338383610f8d565b5050565b61082c3383610ced565b6108485760405162461bcd60e51b81526004016103cb90612069565b6108548484848461105c565b50505050565b60606103268261108f565b6010546000908190606090829060ff161561092a57600e5460408051600481526024810182526020810180516001600160e01b0316632bd3b45160e11b17905290516001600160a01b03909216916108bd9190611e6e565b6000604051808303816000865af19150503d80600081146108fa576040519150601f19603f3d011682016040523d82523d6000602084013e6108ff565b606091505b5090935091508261090f57600080fd5b818060200190518101906109239190611bb4565b90506109d5565b600e5460408051600481526024810182526020810180516001600160e01b03166266af6760e01b17905290516001600160a01b039092169161096c9190611e6e565b6000604051808303816000865af19150503d80600081146109a9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ae565b606091505b509093509150826109be57600080fd5b818060200190518101906109d29190611bb4565b90505b336001600160a01b03821614610a3c5760405162461bcd60e51b815260206004820152602660248201527f416476656e74757265724e4654203a20696e636f7272656374206d696e74206160448201526564647265737360d01b60648201526084016103cb565b85610a4688610780565b610a519060016120ba565b14610aaf5760405162461bcd60e51b815260206004820152602860248201527f416476656e747572654e4654203a206e6f7420616c6c6f77656420746f206d69604482015267373a1030b3b0b4b760c11b60648201526084016103cb565b610abd600c80546001019055565b600c549350610acc87856111fe565b610ad6848661133d565b5050509392505050565b600f805461051390612129565b6000610af960016113c8565b90508015610b1157600b805461ff0019166101001790555b600e80546001600160a01b03191633179055600f80548190610b3290612129565b610b3d9291906119dd565b506010805460ff19168415151790558151610b5f906011906020850190611a68565b50801561085457600b805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b60006001600160e01b0319821663780e9d6360e01b1480610326575061032682611457565b606060008054610bdf90612129565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0b90612129565b8015610c585780601f10610c2d57610100808354040283529160200191610c58565b820191906000526020600020905b815481529060010190602001808311610c3b57829003601f168201915b5050505050905090565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610cb482610709565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610cf882610c62565b610d595760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103cb565b6000610d6483610709565b9050806001600160a01b0316846001600160a01b03161480610dab57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610dcf5750836001600160a01b0316610dc484610363565b6001600160a01b0316145b949350505050565b826001600160a01b0316610dea82610709565b6001600160a01b031614610e4e5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103cb565b6001600160a01b038216610eb05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103cb565b610ebb8383836114a7565b610ec6600082610c7f565b6001600160a01b0383166000908152600360205260408120805460019290610eef9084906120e6565b90915550506001600160a01b0382166000908152600360205260408120805460019290610f1d9084906120ba565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b606060018054610bdf90612129565b816001600160a01b0316836001600160a01b03161415610fef5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103cb565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611067848484610dd7565b611073848484846114b2565b6108545760405162461bcd60e51b81526004016103cb90611fc9565b606061109a82610c62565b6111005760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103cb565b6000828152600660205260408120805461111990612129565b80601f016020809104026020016040519081016040528092919081815260200182805461114590612129565b80156111925780601f1061116757610100808354040283529160200191611192565b820191906000526020600020905b81548152906001019060200180831161117557829003601f168201915b5050505050905060006111b060408051602081019091526000815290565b90508051600014156111c3575092915050565b8151156111f55780826040516020016111dd929190611e8a565b60405160208183030381529060405292505050919050565b610dcf846115bf565b6001600160a01b0382166112545760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103cb565b61125d81610c62565b156112aa5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103cb565b6112b6600083836114a7565b6001600160a01b03821660009081526003602052604081208054600192906112df9084906120ba565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b61134682610c62565b6113a95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103cb565b6000828152600660209081526040909120825161050192840190611a68565b600b54600090610100900460ff1615611411578160ff1660011480156113ed5750303b155b6114095760405162461bcd60e51b81526004016103cb9061201b565b506000919050565b600b5460ff8084169116106114385760405162461bcd60e51b81526004016103cb9061201b565b50600b805460ff191660ff92909216919091179055600190565b919050565b60006001600160e01b031982166380ac58cd60e01b148061148857506001600160e01b03198216635b5e139f60e01b145b8061032657506301ffc9a760e01b6001600160e01b0319831614610326565b610501838383611697565b60006001600160a01b0384163b156115b457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906114f6903390899088908890600401611f79565b602060405180830381600087803b15801561151057600080fd5b505af1925050508015611540575060408051601f3d908101601f1916820190925261153d91810190611da2565b60015b61159a573d80801561156e576040519150601f19603f3d011682016040523d82523d6000602084013e611573565b606091505b5080516115925760405162461bcd60e51b81526004016103cb90611fc9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dcf565b506001949350505050565b60606115ca82610c62565b61162e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103cb565b600061164560408051602081019091526000815290565b905060008151116116655760405180602001604052806000815250611690565b8061166f8461174f565b604051602001611680929190611e8a565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166116f2576116ed81600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b611715565b816001600160a01b0316836001600160a01b03161461171557611715838261184d565b6001600160a01b03821661172c57610501816118ea565b826001600160a01b0316826001600160a01b031614610501576105018282611999565b6060816117735750506040805180820190915260018152600360fc1b602082015290565b8160005b811561179d578061178781612164565b91506117969050600a836120d2565b9150611777565b60008167ffffffffffffffff8111156117b8576117b86121eb565b6040519080825280601f01601f1916602001820160405280156117e2576020820181803683370190505b5090505b8415610dcf576117f76001836120e6565b9150611804600a8661217f565b61180f9060306120ba565b60f81b818381518110611824576118246121d5565b60200101906001600160f81b031916908160001a905350611846600a866120d2565b94506117e6565b6000600161185a84610780565b61186491906120e6565b6000838152600860205260409020549091508082146118b7576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b6009546000906118fc906001906120e6565b6000838152600a602052604081205460098054939450909284908110611924576119246121d5565b906000526020600020015490508060098381548110611945576119456121d5565b6000918252602080832090910192909255828152600a9091526040808220849055858252812055600980548061197d5761197d6121bf565b6001900381819060005260206000200160009055905550505050565b60006119a483610780565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b8280546119e990612129565b90600052602060002090601f016020900481019282611a0b5760008555611a58565b82601f10611a1c5780548555611a58565b82800160010185558215611a5857600052602060002091601f016020900482015b82811115611a58578254825591600101919060010190611a3d565b50611a64929150611adc565b5090565b828054611a7490612129565b90600052602060002090601f016020900481019282611a965760008555611a58565b82601f10611aaf57805160ff1916838001178555611a58565b82800160010185558215611a58579182015b82811115611a58578251825591602001919060010190611ac1565b5b80821115611a645760008155600101611add565b600067ffffffffffffffff80841115611b0c57611b0c6121eb565b604051601f8501601f19908116603f01168101908282118183101715611b3457611b346121eb565b81604052809350858152868686011115611b4d57600080fd5b858560208301376000602087830101525050509392505050565b8035801515811461145257600080fd5b600082601f830112611b8857600080fd5b61169083833560208501611af1565b600060208284031215611ba957600080fd5b813561169081612201565b600060208284031215611bc657600080fd5b815161169081612201565b60008060408385031215611be457600080fd5b8235611bef81612201565b91506020830135611bff81612201565b809150509250929050565b600080600060608486031215611c1f57600080fd5b8335611c2a81612201565b92506020840135611c3a81612201565b929592945050506040919091013590565b60008060008060808587031215611c6157600080fd5b8435611c6c81612201565b93506020850135611c7c81612201565b925060408501359150606085013567ffffffffffffffff811115611c9f57600080fd5b8501601f81018713611cb057600080fd5b611cbf87823560208401611af1565b91505092959194509250565b60008060408385031215611cde57600080fd5b8235611ce981612201565b9150611cf760208401611b67565b90509250929050565b60008060408385031215611d1357600080fd5b8235611d1e81612201565b946020939093013593505050565b600080600060608486031215611d4157600080fd5b8335611d4c81612201565b925060208401359150604084013567ffffffffffffffff811115611d6f57600080fd5b611d7b86828701611b77565b9150509250925092565b600060208284031215611d9757600080fd5b813561169081612219565b600060208284031215611db457600080fd5b815161169081612219565b600080600060608486031215611dd457600080fd5b833567ffffffffffffffff80821115611dec57600080fd5b611df887838801611b77565b9450611e0660208701611b67565b93506040860135915080821115611e1c57600080fd5b50611d7b86828701611b77565b600060208284031215611e3b57600080fd5b5035919050565b60008151808452611e5a8160208601602086016120fd565b601f01601f19169290920160200192915050565b60008251611e808184602087016120fd565b9190910192915050565b60008351611e9c8184602088016120fd565b835190830190611eb08183602088016120fd565b01949350505050565b600083516020611ecc82858389016120fd565b602d60f81b918401918252845460019060009080831c81841680611ef157607f821691505b858210811415611f0f57634e487b7160e01b84526022600452602484fd5b808015611f235760018114611f3857611f69565b60ff1984168887015282880186019450611f69565b60008b81526020902060005b84811015611f5f5781548a8201890152908701908801611f44565b5050858389010194505b50929a9950505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611fac90830184611e42565b9695505050505050565b6020815260006116906020830184611e42565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156120cd576120cd612193565b500190565b6000826120e1576120e16121a9565b500490565b6000828210156120f8576120f8612193565b500390565b60005b83811015612118578181015183820152602001612100565b838111156108545750506000910152565b600181811c9082168061213d57607f821691505b6020821081141561215e57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561217857612178612193565b5060010190565b60008261218e5761218e6121a9565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461221657600080fd5b50565b6001600160e01b03198116811461221657600080fdfea2646970667358221220faf74da3d29ce606c4a5c788ac32baea1f1498ad770c2991a3c36030c4d6982a64736f6c63430008070033";

type AdventurerNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdventurerNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdventurerNFT__factory extends ContractFactory {
  constructor(...args: AdventurerNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AdventurerNFT> {
    return super.deploy(overrides || {}) as Promise<AdventurerNFT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AdventurerNFT {
    return super.attach(address) as AdventurerNFT;
  }
  override connect(signer: Signer): AdventurerNFT__factory {
    return super.connect(signer) as AdventurerNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdventurerNFTInterface {
    return new utils.Interface(_abi) as AdventurerNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdventurerNFT {
    return new Contract(address, _abi, signerOrProvider) as AdventurerNFT;
  }
}
