{
  "address": "0xee8E88AD0583239FBAda0f5D73e717a68BeA24cd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_projectNFTAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pathwayNFTAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_verifyAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sponsorSFT",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_appSigningAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_ERC20Addrs",
          "type": "address[]"
        }
      ],
      "name": "addERC20PerChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "projectId",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "chainIds",
          "type": "uint256[]"
        },
        {
          "internalType": "address[][]",
          "name": "ERC20Addrs",
          "type": "address[][]"
        }
      ],
      "name": "addProjectERC20PerChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "appSigningAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "projectId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "ERC20Addr",
          "type": "address"
        }
      ],
      "name": "checkApprovedERC20PerProjectByChain",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_projectId",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "appSign",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "projectSigningAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_diamondCutFacet",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        }
      ],
      "name": "deployDiamond",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "getERC20Addrs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "projectId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        }
      ],
      "name": "getERC20AddrsPerProject",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isERC20ApprovedOnChainId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isProjectERC20ApprovedOnChainId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiSigThreshold",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numReviewers",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "projApproved",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "projectDiamondAddrs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "reviewers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_projectId",
          "type": "string"
        }
      ],
      "name": "setApproved",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newNFTAddr",
          "type": "address"
        }
      ],
      "name": "setprojectNFTAddr",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x12b6d2e1c36ae963389a9e74384af2be89c23a75ac354ded13fa0540a3057ddc",
  "receipt": {
    "to": null,
    "from": "0x7E13623dd5D070967c8568066bE81a3E5bF75226",
    "contractAddress": "0xee8E88AD0583239FBAda0f5D73e717a68BeA24cd",
    "transactionIndex": 9,
    "gasUsed": "3991963",
    "logsBloom": "0x
    "blockHash": "0x08d9114cc4c631a5469b17b960d302dc7f9b713e94f5fbf42a0d662dc37f1b99",
    "transactionHash": "0x12b6d2e1c36ae963389a9e74384af2be89c23a75ac354ded13fa0540a3057ddc",
    "logs": [
      {
        "transactionIndex": 9,
        "blockNumber": 10405986,
        "transactionHash": "0x12b6d2e1c36ae963389a9e74384af2be89c23a75ac354ded13fa0540a3057ddc",
        "address": "0xee8E88AD0583239FBAda0f5D73e717a68BeA24cd",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007e13623dd5d070967c8568066be81a3e5bf75226"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x08d9114cc4c631a5469b17b960d302dc7f9b713e94f5fbf42a0d662dc37f1b99"
      }
    ],
    "blockNumber": 10405986,
    "cumulativeGasUsed": "7224496",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc6f5693C9741A4889870CbE361428Eb0Ba0c05e3",
    "0xD22b3C2fa85ED33464764189A5CB6d96b1481A8A",
    "0x51E8C04f096b0dcDA51bF887B90A28dfD24bb35d",
    "0x8bc0c9a051530A599a0D7d83A78b503402e13306",
    "0x5eF593FF381b7d36028c795B51e138428d009C20"
  ],
  "numDeployments": 7,
  "solcInputHash": "987e3e415ee3f416570c646306924229",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_projectNFTAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pathwayNFTAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_verifyAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sponsorSFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_appSigningAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_ERC20Addrs\",\"type\":\"address[]\"}],\"name\":\"addERC20PerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"},{\"internalType\":\"address[][]\",\"name\":\"ERC20Addrs\",\"type\":\"address[][]\"}],\"name\":\"addProjectERC20PerChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"appSigningAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ERC20Addr\",\"type\":\"address\"}],\"name\":\"checkApprovedERC20PerProjectByChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_projectId\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"appSign\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"projectSigningAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_diamondCutFacet\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"}],\"name\":\"deployDiamond\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getERC20Addrs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"projectId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getERC20AddrsPerProject\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isERC20ApprovedOnChainId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isProjectERC20ApprovedOnChainId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiSigThreshold\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numReviewers\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"projApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"projectDiamondAddrs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reviewers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_projectId\",\"type\":\"string\"}],\"name\":\"setApproved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newNFTAddr\",\"type\":\"address\"}],\"name\":\"setprojectNFTAddr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AppDiamond.sol\":\"AppDiamond\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/AppDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ProjectDiamond } from \\\"./ProjectDiamond.sol\\\";\\n\\ncontract AppDiamond is Ownable {\\n    address projectNFTAddr;//address that mints NFT after approval process to project\\n    address verifyAddr;//address that verifies deployments and updates\\n    address pathwayNFTAddr;//address mints Pathway NFTs\\n    mapping (address => bool) public reviewers;//same ones who can approve projectNFT\\n    uint128 public multiSigThreshold; //gives minimum multisig percentage (30 = 30% )\\n    uint128 public numReviewers;//number of Reviewers. Needed for threshold calculation\\n    mapping (string => bool) public projApproved;//is Project NFt already approved and minted\\n    mapping (string => address) public projectDiamondAddrs; //mapping of address of deployed diamonds for \\n    address public appSigningAddr;\\n    address sponsorSFT;//ERC1155 for sponsors\\n    mapping (uint => address[]) internal approvedERC20sPerChain;//approved ERC20s per Chain only use when calculating all the refunds for a pathway\\n    mapping (uint => mapping (address => bool)) public isERC20ApprovedOnChainId;//check if this is an approved ERC20\\n    mapping (string => mapping (uint => address[])) internal projectApprovedERC20sPerChain;//approved ERC20s per project per chain\\n    mapping (string => mapping (uint => mapping (address => bool))) public isProjectERC20ApprovedOnChainId;//check if this is an approved ERC20 for project\\n\\n    constructor(address _projectNFTAddr, address _pathwayNFTAddr, address _verifyAddr, address _sponsorSFT, address _appSigningAddr){\\n        projectNFTAddr = _projectNFTAddr;\\n        pathwayNFTAddr = _pathwayNFTAddr;\\n        verifyAddr = _verifyAddr;\\n        appSigningAddr = _appSigningAddr;\\n        sponsorSFT = _sponsorSFT;\\n    }\\n\\n    receive() external payable {}\\n\\n    //eventually will need to make this multiSig, but onlyOwner for right now\\n    function setprojectNFTAddr(address _newNFTAddr) public onlyOwner{\\n        projectNFTAddr = _newNFTAddr;\\n    }\\n\\n    function setApproved(string memory _projectId) external {\\n        require(_msgSender() == projectNFTAddr);\\n        projApproved[_projectId] = true;\\n    } \\n      \\n    function deployDiamond(string memory _projectId, bool appSign, address projectSigningAddr, address _diamondCutFacet, bytes32 r, bytes32 s, uint8 v) external {\\n        (bool success, bytes memory data) = projectNFTAddr.call(abi.encodeWithSelector(bytes4(keccak256(\\\"reviewers(address)\\\")), _msgSender()));\\n        require(success, \\\"unsuccessful call\\\");\\n        success = abi.decode(data, (bool));\\n        require(success, \\\"not approved app reviewer\\\");\\n        require(projectDiamondAddrs[_projectId] == address(0), \\\"project had a diamond already\\\");//for now immutable diamond could change later\\n        require(projApproved[_projectId], \\\"project NFT not minted\\\");\\n        //call verify to make sure this is ok to deploy\\n        (success, data) = verifyAddr.call(abi.encodeWithSelector(bytes4(keccak256(\\\"deployDiamondVerify(address,string,bytes32,bytes32,bytes32)\\\")), \\n                _msgSender(),\\n                _projectId,\\n                r,\\n                s,\\n                v\\n            ));\\n        require(success, \\\"unsuccessful call\\\");\\n        success = abi.decode(data, (bool));\\n        require(success, \\\"AppDiamond : not approved deploy\\\");\\n        \\n        //deploy diamond for project\\n\\n        ProjectDiamond p = new ProjectDiamond(owner(), _diamondCutFacet, appSign, projectSigningAddr, projectNFTAddr, pathwayNFTAddr, _projectId);\\n        projectDiamondAddrs[_projectId] = address(p);\\n    }\\n\\n    //impossible for now to take off approved ERC20 Addrs, but can add new ones to mapping\\n    function addERC20PerChain(uint chainId, address[] memory  _ERC20Addrs) external onlyOwner{\\n        require(chainId > 0 && _ERC20Addrs.length > 0, \\\"invalid entry\\\");\\n        approvedERC20sPerChain[chainId] = _ERC20Addrs;\\n        for(uint i=0; i< _ERC20Addrs.length; i++){\\n           isERC20ApprovedOnChainId[chainId][_ERC20Addrs[i]] = true; \\n        }\\n    }\\n\\n    function getERC20Addrs(uint chainId) external view returns(address[] memory){\\n        return approvedERC20sPerChain[chainId];\\n    }\\n\\n    function getERC20AddrsPerProject(string memory projectId, uint chainId) external view returns(address[] memory){\\n        return projectApprovedERC20sPerChain[projectId][chainId];\\n    }\\n\\n    function checkApprovedERC20PerProjectByChain(string memory projectId, uint256 chainId, address ERC20Addr) external view returns(bool){\\n        return (isERC20ApprovedOnChainId[chainId][ERC20Addr] || isProjectERC20ApprovedOnChainId[projectId][chainId][ERC20Addr]);\\n    }\\n\\n    function addProjectERC20PerChain(string memory projectId, uint[] memory chainIds, address[][] memory ERC20Addrs) external {\\n        (bool success, bytes memory data) = projectNFTAddr.call(abi.encodeWithSelector(bytes4(keccak256(\\\"reviewers(address)\\\")), _msgSender()));\\n        require(success, \\\"unsuccessful call\\\");\\n        bool isReviewer = abi.decode(data, (bool));\\n        require(isReviewer, \\\"not approved app reviewer\\\");\\n        require(chainIds.length > 0 && chainIds.length == ERC20Addrs.length, \\\"invalid lengths sent\\\");\\n        uint j;\\n        for(uint i=0; i<chainIds.length; i++){\\n            projectApprovedERC20sPerChain[projectId][chainIds[i]] = ERC20Addrs[i];\\n            for(j=0; j< ERC20Addrs[i].length; j++){\\n                isProjectERC20ApprovedOnChainId[projectId][chainIds[i]][ERC20Addrs[i][j]]=true;\\n            }\\n        }\\n    }\\n}\",\"keccak256\":\"0x0880cbd6833f16becff56f26152c38eae7ff302a0fd33bf501d108d7f2847a8f\",\"license\":\"MIT\"},\"contracts/ProjectDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/******************************************************************************\\\\\\n* Author: Jamie Pickett\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n*\\n* Implementation of a diamond for the project.\\n/******************************************************************************/\\n\\nimport { LibDiamond } from \\\"./libraries/LibDiamond.sol\\\";\\nimport { IDiamondCut } from \\\"./interfaces/IDiamondCut.sol\\\";\\n\\ncontract ProjectDiamond {    \\n\\n    constructor(address _contractOwner, address _diamondCutFacet, bool _appApproval, address _projectSigningAddr,\\n            address _projectNFTAddr, address _pathwayNFTAddr, string memory _projectId) payable {        \\n        LibDiamond.setContractOwner(_contractOwner);\\n        LibDiamond.setInitParams(_appApproval, _projectSigningAddr, _projectNFTAddr, _pathwayNFTAddr, _projectId);\\n\\n        // Add the diamondCut external function from the diamondCutFacet\\n        IDiamondCut.FacetCut[] memory cut = new IDiamondCut.FacetCut[](1);\\n        bytes4[] memory functionSelectors = new bytes4[](1);\\n        functionSelectors[0] = IDiamondCut.diamondCut.selector;\\n        cut[0] = IDiamondCut.FacetCut({\\n            facetAddress: _diamondCutFacet, \\n            action: IDiamondCut.FacetCutAction.Add, \\n            functionSelectors: functionSelectors\\n        });\\n        LibDiamond.diamondCut(cut, address(0), \\\"\\\");        \\n    }\\n\\n    function addPathwayId(string memory _pathwayId) external {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        // get diamond storage\\n        assembly {\\n            ds.slot := position\\n        }\\n        require(msg.sender == ds.pathwayNFTAddr, \\\"ProjectDiamond : wrong sender\\\");\\n        ds.validPathways[_pathwayId] = true;\\n    }\\n\\n    // Find facet for function that is called and execute the\\n    // function if a facet is found and return any value.\\n    fallback() external payable {\\n        LibDiamond.DiamondStorage storage ds;\\n        bytes32 position = LibDiamond.DIAMOND_STORAGE_POSITION;\\n        // get diamond storage\\n        assembly {\\n            ds.slot := position\\n        }\\n        // get facet from function selector\\n        address facet = ds.facetAddressAndSelectorPosition[msg.sig].facetAddress;\\n        require(facet != address(0), \\\"Diamond: Function does not exist\\\");\\n        // Execute external function from facet using delegatecall and return any value.\\n        assembly {\\n            // copy function selector and any arguments\\n            calldatacopy(0, 0, calldatasize())\\n             // execute function call using the facet\\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\\n            // get any return value\\n            returndatacopy(0, 0, returndatasize())\\n            // return any return value or error back to the caller\\n            switch result\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0xfe75f5bdb937b7c3a1675fc6b7ed39584997c32736abcf1b2dbb6039cd44eec1\",\"license\":\"MIT\"},\"contracts/interfaces/IDiamondCut.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/******************************************************************************\\\\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\\n/******************************************************************************/\\n\\ninterface IDiamondCut {\\n    enum FacetCutAction {Add, Replace, Remove}\\n    // Add=0, Replace=1, Remove=2\\n\\n    struct FacetCut {\\n        address facetAddress;\\n        FacetCutAction action;\\n        bytes4[] functionSelectors;\\n    }\\n\\n    /// @notice Add/replace/remove any number of functions and optionally execute\\n    ///         a function with delegatecall\\n    /// @param _diamondCut Contains the facet addresses and function selectors\\n    /// @param _init The address of the contract or facet to execute _calldata\\n    /// @param _calldata A function call, including function selector and arguments\\n    ///                  _calldata is executed with delegatecall on _init\\n    function diamondCut(\\n        FacetCut[] calldata _diamondCut,\\n        address _init,\\n        bytes calldata _calldata\\n    ) external;\\n\\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\\n}\\n\",\"keccak256\":\"0x6f26277b09625ad4b4b388ac224900b017e06d19e6b47b7223ab91f90f0ae2ec\",\"license\":\"MIT\"},\"contracts/libraries/LibDiamond.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\n/******************************************************************************\\\\\\n* Author: Jamie Pickett\\n/******************************************************************************/\\nimport { IDiamondCut } from \\\"../interfaces/IDiamondCut.sol\\\";\\n\\nlibrary LibDiamond {\\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\\\"dCompass.standard.diamond.storage\\\");\\n\\n    struct FacetAddressAndSelectorPosition {\\n        address facetAddress;\\n        uint16 selectorPosition;\\n    }\\n\\n    struct DiamondStorage {\\n        mapping(bytes4 => FacetAddressAndSelectorPosition) facetAddressAndSelectorPosition;\\n        bytes4[] selectors;\\n        mapping(bytes4 => bool) supportedInterfaces;\\n        // owner of the contract\\n        address contractOwner;\\n        address[] contractReviewers;\\n        address signingAddress;//project specific signing key if they control the process\\n        address projectNFTAddr;\\n        address pathwayNFTAddr;\\n        string projectId;\\n        string ceramicStream;\\n        bool appControlApproval;//does app control approval\\n        mapping (string => bool) validPathways;//is pathwayId in this project\\n        mapping (string => string) questParent;//questID to pathwayID\\n        mapping (string => uint) questTokenId;//ERC1155 tokenId associated with this quest\\n        mapping (uint => string) tokenQuestId;//reverse of map above\\n        mapping (string => uint[]) tokenIdsPerPathway;//all tokenIds for a pathway. useful for getter\\n        //pathwayId => addressOfUser => addressERC20 => bool\\n        mapping (string => mapping(address => bool)) userRewardedForPathwayERC20;//has user received funds for this pathway in ERC20Token Address\\n        mapping (string => mapping(address => bool)) userRewardedForPathwayNative;//has user received funds for this pathway in native token\\n        /* TODO : add in pathway and eventually quest level control */\\n    }\\n\\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\\n        bytes32 position = DIAMOND_STORAGE_POSITION;\\n        assembly {\\n            ds.slot := position\\n        }\\n    }\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    function setContractOwner(address _newOwner) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        address previousOwner = ds.contractOwner;\\n        ds.contractOwner = _newOwner;\\n        emit OwnershipTransferred(previousOwner, _newOwner);\\n    }\\n\\n    function setInitParams(bool _appApproval, address _projectSigningAddr, address _projectNFTAddr, address _pathwayNFTAddr, string memory _projectId) internal {\\n        DiamondStorage storage ds = diamondStorage();\\n        ds.appControlApproval = _appApproval;\\n        ds.signingAddress = _projectSigningAddr;\\n        ds.projectNFTAddr = _projectNFTAddr;\\n        ds.pathwayNFTAddr = _pathwayNFTAddr;\\n        ds.projectId = _projectId;\\n    } \\n\\n    function contractOwner() internal view returns (address contractOwner_) {\\n        contractOwner_ = diamondStorage().contractOwner;\\n    }\\n\\n    function enforceIsContractOwner() internal view {\\n        require(msg.sender == diamondStorage().contractOwner, \\\"LibDiamond: Must be contract owner\\\");\\n    }\\n\\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\\n\\n    // Internal function version of diamondCut\\n    function diamondCut(\\n        IDiamondCut.FacetCut[] memory _diamondCut,\\n        address _init,\\n        bytes memory _calldata\\n    ) internal {\\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\\n            if (action == IDiamondCut.FacetCutAction.Add) {\\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\\n            } else {\\n                revert(\\\"LibDiamondCut: Incorrect FacetCutAction\\\");\\n            }\\n        }\\n        emit DiamondCut(_diamondCut, _init, _calldata);\\n        initializeDiamondCut(_init, _calldata);\\n    }\\n\\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        uint16 selectorCount = uint16(ds.selectors.length);\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Add facet can't be address(0)\\\");\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: Add facet has no code\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.facetAddressAndSelectorPosition[selector].facetAddress;\\n            require(oldFacetAddress == address(0), \\\"LibDiamondCut: Can't add function that already exists\\\");\\n            ds.facetAddressAndSelectorPosition[selector] = FacetAddressAndSelectorPosition(_facetAddress, selectorCount);\\n            ds.selectors.push(selector);\\n            selectorCount++;\\n        }\\n    }\\n\\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        require(_facetAddress != address(0), \\\"LibDiamondCut: Replace facet can't be address(0)\\\");\\n        enforceHasContractCode(_facetAddress, \\\"LibDiamondCut: Replace facet has no code\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            address oldFacetAddress = ds.facetAddressAndSelectorPosition[selector].facetAddress;\\n            // can't replace immutable functions -- functions defined directly in the diamond\\n            require(oldFacetAddress != address(this), \\\"LibDiamondCut: Can't replace immutable function\\\");\\n            require(oldFacetAddress != _facetAddress, \\\"LibDiamondCut: Can't replace function with same function\\\");\\n            require(oldFacetAddress != address(0), \\\"LibDiamondCut: Can't replace function that doesn't exist\\\");\\n            // replace old facet address\\n            ds.facetAddressAndSelectorPosition[selector].facetAddress = _facetAddress;\\n        }\\n    }\\n\\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\\n        require(_functionSelectors.length > 0, \\\"LibDiamondCut: No selectors in facet to cut\\\");\\n        DiamondStorage storage ds = diamondStorage();\\n        uint256 selectorCount = ds.selectors.length;\\n        require(_facetAddress == address(0), \\\"LibDiamondCut: Remove facet address must be address(0)\\\");\\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\\n            bytes4 selector = _functionSelectors[selectorIndex];\\n            FacetAddressAndSelectorPosition memory oldFacetAddressAndSelectorPosition = ds.facetAddressAndSelectorPosition[selector];\\n            require(oldFacetAddressAndSelectorPosition.facetAddress != address(0), \\\"LibDiamondCut: Can't remove function that doesn't exist\\\");\\n            // can't remove immutable functions -- functions defined directly in the diamond\\n            require(oldFacetAddressAndSelectorPosition.facetAddress != address(this), \\\"LibDiamondCut: Can't remove immutable function.\\\");\\n            // replace selector with last selector\\n            selectorCount--;\\n            if (oldFacetAddressAndSelectorPosition.selectorPosition != selectorCount) {\\n                bytes4 lastSelector = ds.selectors[selectorCount];\\n                ds.selectors[oldFacetAddressAndSelectorPosition.selectorPosition] = lastSelector;\\n                ds.facetAddressAndSelectorPosition[lastSelector].selectorPosition = oldFacetAddressAndSelectorPosition.selectorPosition;\\n            }\\n            // delete last selector\\n            ds.selectors.pop();\\n            delete ds.facetAddressAndSelectorPosition[selector];\\n        }\\n    }\\n\\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\\n        if (_init == address(0)) {\\n            require(_calldata.length == 0, \\\"LibDiamondCut: _init is address(0) but_calldata is not empty\\\");\\n        } else {\\n            require(_calldata.length > 0, \\\"LibDiamondCut: _calldata is empty but _init is not address(0)\\\");\\n            if (_init != address(this)) {\\n                enforceHasContractCode(_init, \\\"LibDiamondCut: _init address has no code\\\");\\n            }\\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\\n            if (!success) {\\n                if (error.length > 0) {\\n                    // bubble up the error\\n                    revert(string(error));\\n                } else {\\n                    revert(\\\"LibDiamondCut: _init function reverted\\\");\\n                }\\n            }\\n        }\\n    }\\n\\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\\n        uint256 contractSize;\\n        assembly {\\n            contractSize := extcodesize(_contract)\\n        }\\n        require(contractSize > 0, _errorMessage);\\n    }\\n}\",\"keccak256\":\"0x4a963b8e0d5df8c30b1eb12e030ad436ce9752d691f1a1dc3e39f6cfb106e886\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200466038038062004660833981016040819052620000349162000110565b6200003f33620000a3565b600180546001600160a01b03199081166001600160a01b039788161790915560038054821695871695909517909455600280548516938616939093179092556008805484169285169290921790915560098054909216921691909117905562000180565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010b57600080fd5b919050565b600080600080600060a086880312156200012957600080fd5b6200013486620000f3565b94506200014460208701620000f3565b93506200015460408701620000f3565b92506200016460608701620000f3565b91506200017460808701620000f3565b90509295509295909350565b6144d080620001906000396000f3fe6080604052600436106200012f5760003560e01c8063952e5d8111620000ad578063e878955e116200006c578063e878955e14620003c0578063edef67671462000415578063f2fde38b146200043a578063f7cbb1b2146200045f578063ffc53ca0146200049357600080fd5b8063952e5d811462000306578063a5207df5146200032b578063b2f3f80c146200034d578063c50441ae1462000376578063d8ded0f3146200039b57600080fd5b806365a3596411620000fa57806365a3596414620001fd5780636c352513146200025b578063715018a6146200029a57806386e3e71214620002b25780638da5cb5b14620002e657600080fd5b806307f30b17146200013c57806311f6903914620001635780634badfeb2146200019d5780634fd0809214620001d857600080fd5b366200013757005b600080fd5b3480156200014957600080fd5b50620001616200015b366004620015ea565b620004d2565b005b3480156200017057600080fd5b50620001886200018236600462001544565b620005fc565b60405190151581526020015b60405180910390f35b348015620001aa57600080fd5b50600554620001bf906001600160801b031681565b6040516001600160801b03909116815260200162000194565b348015620001e557600080fd5b5062000161620001f736600462001451565b62000675565b3480156200020a57600080fd5b50620002426200021c36600462001326565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b6040516001600160a01b03909116815260200162000194565b3480156200026857600080fd5b50620001886200027a366004620015bb565b600b60209081526000928352604080842090915290825290205460ff1681565b348015620002a757600080fd5b506200016162000ab1565b348015620002bf57600080fd5b50620002d7620002d1366004620014fb565b62000aec565b60405162000194919062001722565b348015620002f357600080fd5b506000546001600160a01b031662000242565b3480156200031357600080fd5b5062000161620003253660046200135f565b62000b76565b3480156200033857600080fd5b5060085462000242906001600160a01b031681565b3480156200035a57600080fd5b50600554620001bf90600160801b90046001600160801b031681565b3480156200038357600080fd5b50620001616200039536600462001326565b62000e98565b348015620003a857600080fd5b5062000161620003ba366004620012e1565b62000ef0565b348015620003cd57600080fd5b5062000188620003df36600462001544565b8251602081850181018051600d825292820195820195909520919094528352600091825260408083209093528152205460ff1681565b3480156200042257600080fd5b50620002d762000434366004620015a1565b62000f3f565b3480156200044757600080fd5b506200016162000459366004620012e1565b62000fad565b3480156200046c57600080fd5b50620001886200047e366004620012e1565b60046020526000908152604090205460ff1681565b348015620004a057600080fd5b5062000188620004b236600462001326565b805160208183018101805160068252928201919093012091525460ff1681565b6000546001600160a01b03163314620005085760405162461bcd60e51b8152600401620004ff9062001771565b60405180910390fd5b6000821180156200051a575060008151115b620005585760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420656e74727960981b6044820152606401620004ff565b6000828152600a60209081526040909120825162000579928401906200109f565b5060005b8151811015620005f7576000838152600b60205260408120835160019290859085908110620005b057620005b062001889565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620005ee816200185f565b9150506200057d565b505050565b6000828152600b602090815260408083206001600160a01b038516845290915281205460ff16806200066d5750600d846040516200063b919062001663565b908152604080516020928190038301902060008681529083528181206001600160a01b038616825290925290205460ff165b949350505050565b600154604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637be5d8d960e11b179052905160009283926001600160a01b0390911691620006d0919062001663565b6000604051808303816000865af19150503d80600081146200070f576040519150601f19603f3d011682016040523d82523d6000602084013e62000714565b606091505b509150915081620007395760405162461bcd60e51b8152600401620004ff90620017a6565b808060200190518101906200074f919062001306565b9150816200079c5760405162461bcd60e51b81526020600482015260196024820152783737ba1030b8383937bb32b21030b838103932bb34b2bbb2b960391b6044820152606401620004ff565b60006001600160a01b031660078a604051620007b9919062001663565b908152604051908190036020019020546001600160a01b031614620008215760405162461bcd60e51b815260206004820152601d60248201527f70726f6a656374206861642061206469616d6f6e6420616c72656164790000006044820152606401620004ff565b60068960405162000833919062001663565b9081526040519081900360200190205460ff166200088d5760405162461bcd60e51b81526020600482015260166024820152751c1c9bda9958dd08139195081b9bdd081b5a5b9d195960521b6044820152606401620004ff565b6002546001600160a01b03167fa116094cad7080180cb4829b84fc5b6862826b05e6b82452d0fd66c6b40a9154338b888888604051602401620008d5959493929190620016dc565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905162000915919062001663565b6000604051808303816000865af19150503d806000811462000954576040519150601f19603f3d011682016040523d82523d6000602084013e62000959565b606091505b509092509050816200097f5760405162461bcd60e51b8152600401620004ff90620017a6565b8080602001905181019062000995919062001306565b915081620009e65760405162461bcd60e51b815260206004820181905260248201527f4170704469616d6f6e64203a206e6f7420617070726f766564206465706c6f796044820152606401620004ff565b600080546001600160a01b0316878a8a600160009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168f60405162000a319062001109565b62000a43979695949392919062001681565b604051809103906000f08015801562000a60573d6000803e3d6000fd5b5090508060078b60405162000a76919062001663565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050505050505050565b6000546001600160a01b0316331462000ade5760405162461bcd60e51b8152600401620004ff9062001771565b62000aea60006200104f565b565b6060600c8360405162000b00919062001663565b9081526040805191829003602090810183206000868152908252829020805480830285018301909352828452919083018282801562000b6957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000b4a575b5050505050905092915050565b600154604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637be5d8d960e11b179052905160009283926001600160a01b039091169162000bd1919062001663565b6000604051808303816000865af19150503d806000811462000c10576040519150601f19603f3d011682016040523d82523d6000602084013e62000c15565b606091505b50915091508162000c3a5760405162461bcd60e51b8152600401620004ff90620017a6565b60008180602001905181019062000c52919062001306565b90508062000c9f5760405162461bcd60e51b81526020600482015260196024820152783737ba1030b8383937bb32b21030b838103932bb34b2bbb2b960391b6044820152606401620004ff565b6000855111801562000cb2575083518551145b62000cf75760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081b195b99dd1a1cc81cd95b9d60621b6044820152606401620004ff565b6000805b865181101562000e8e5785818151811062000d1a5762000d1a62001889565b6020026020010151600c8960405162000d34919062001663565b9081526020016040518091039020600089848151811062000d595762000d5962001889565b60200260200101518152602001908152602001600020908051906020019062000d849291906200109f565b50600091505b85818151811062000d9f5762000d9f62001889565b60200260200101515182101562000e79576001600d8960405162000dc4919062001663565b9081526020016040518091039020600089848151811062000de95762000de962001889565b60200260200101518152602001908152602001600020600088848151811062000e165762000e1662001889565b6020026020010151858151811062000e325762000e3262001889565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558162000e70816200185f565b92505062000d8a565b8062000e85816200185f565b91505062000cfb565b5050505050505050565b6001546001600160a01b0316336001600160a01b03161462000eb957600080fd5b600160068260405162000ecd919062001663565b908152604051908190036020019020805491151560ff1990921691909117905550565b6000546001600160a01b0316331462000f1d5760405162461bcd60e51b8152600401620004ff9062001771565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600a602090815260409182902080548351818402810184019094528084526060939283018282801562000fa157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000f82575b50505050509050919050565b6000546001600160a01b0316331462000fda5760405162461bcd60e51b8152600401620004ff9062001771565b6001600160a01b038116620010415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004ff565b6200104c816200104f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620010f7579160200282015b82811115620010f757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620010c0565b506200110592915062001117565b5090565b612bd680620018c583390190565b5b8082111562001105576000815560010162001118565b80356001600160a01b03811681146200114657600080fd5b919050565b600082601f8301126200115d57600080fd5b8135602062001176620011708362001805565b620017d1565b80838252828201915082860187848660051b89010111156200119757600080fd5b60005b85811015620011c157620011ae826200112e565b845292840192908401906001016200119a565b5090979650505050505050565b600082601f830112620011e057600080fd5b81356020620011f3620011708362001805565b80838252828201915082860187848660051b89010111156200121457600080fd5b6000805b868110156200125c57823567ffffffffffffffff81111562001238578283fd5b620012488b88838d01016200114b565b865250938501939185019160010162001218565b509198975050505050505050565b600082601f8301126200127c57600080fd5b813567ffffffffffffffff8111156200129957620012996200189f565b620012ae601f8201601f1916602001620017d1565b818152846020838601011115620012c457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215620012f457600080fd5b620012ff826200112e565b9392505050565b6000602082840312156200131957600080fd5b8151620012ff81620018b5565b6000602082840312156200133957600080fd5b813567ffffffffffffffff8111156200135157600080fd5b6200066d848285016200126a565b6000806000606084860312156200137557600080fd5b833567ffffffffffffffff808211156200138e57600080fd5b6200139c878388016200126a565b9450602091508186013581811115620013b457600080fd5b8601601f81018813620013c657600080fd5b8035620013d7620011708262001805565b8082825285820191508584018b878560051b8701011115620013f857600080fd5b600094505b838510156200141d578035835260019490940193918601918601620013fd565b50965050505060408601359150808211156200143857600080fd5b506200144786828701620011ce565b9150509250925092565b600080600080600080600060e0888a0312156200146d57600080fd5b873567ffffffffffffffff8111156200148557600080fd5b620014938a828b016200126a565b9750506020880135620014a681620018b5565b9550620014b6604089016200112e565b9450620014c6606089016200112e565b93506080880135925060a0880135915060c088013560ff81168114620014eb57600080fd5b8091505092959891949750929550565b600080604083850312156200150f57600080fd5b823567ffffffffffffffff8111156200152757600080fd5b62001535858286016200126a565b95602094909401359450505050565b6000806000606084860312156200155a57600080fd5b833567ffffffffffffffff8111156200157257600080fd5b62001580868287016200126a565b9350506020840135915062001598604085016200112e565b90509250925092565b600060208284031215620015b457600080fd5b5035919050565b60008060408385031215620015cf57600080fd5b82359150620015e1602084016200112e565b90509250929050565b60008060408385031215620015fe57600080fd5b82359150602083013567ffffffffffffffff8111156200161d57600080fd5b6200162b858286016200114b565b9150509250929050565b600081518084526200164f8160208601602086016200182c565b601f01601f19169290920160200192915050565b60008251620016778184602087016200182c565b9190910192915050565b6001600160a01b0388811682528781166020830152861515604083015285811660608301528481166080830152831660a082015260e060c08201819052600090620016cf9083018462001635565b9998505050505050505050565b6001600160a01b038616815260a060208201819052600090620017029083018762001635565b604083019590955250606081019290925260ff1660809091015292915050565b6020808252825182820181905260009190848201906040850190845b81811015620017655783516001600160a01b0316835292840192918401916001016200173e565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601190820152701d5b9cdd58d8d95cdcd99d5b0818d85b1b607a1b604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715620017fd57620017fd6200189f565b604052919050565b600067ffffffffffffffff8211156200182257620018226200189f565b5060051b60200190565b60005b83811015620018495781810151838201526020016200182f565b8381111562001859576000848401525b50505050565b60006000198214156200188257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146200104c57600080fdfe608060405260405162002bd638038062002bd68339810160408190526200002691620011ee565b6200003c876200017560201b620001ba1760201c565b620000568585858585620001f960201b6200023d1760201c565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200006d5750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000e057620000e062001599565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b038a16815290810160008152602001828152508260008151811062000133576200013362001599565b602002602001018190525062000166826000604051806020016040528060008152506200030f60201b620003501760201c565b505050505050505050620015c5565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667c80546001600160a01b031981166001600160a01b0384811691821790935560405160008051602062002b22833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566683805460ff19168615151790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667e80546001600160a01b03199081166001600160a01b03878116919091179092557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667f805482168684161790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666808054909116918416919091179055805160008051602062002b228339815191529062000306907f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666819060208501906200112b565b50505050505050565b60005b83518110156200051e57600084828151811062000333576200033362001599565b6020026020010151602001519050600060028111156200035757620003576200156d565b8160028111156200036c576200036c6200156d565b1415620003cb57620003c58583815181106200038c576200038c62001599565b602002602001015160000151868481518110620003ad57620003ad62001599565b6020026020010151604001516200056d60201b60201c565b62000508565b6001816002811115620003e257620003e26200156d565b14156200043b57620003c585838151811062000402576200040262001599565b60200260200101516000015186848151811062000423576200042362001599565b6020026020010151604001516200082160201b60201c565b60028160028111156200045257620004526200156d565b1415620004ab57620003c585838151811062000472576200047262001599565b60200260200101516000015186848151811062000493576200049362001599565b60200260200101516040015162000b1060201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b5080620005158162001539565b91505062000312565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405162000554939291906200136b565b60405180910390a162000568828262000ee8565b505050565b6000815111620005c35760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a5460008051602062002b22833981519152906001600160a01b038416620006635760405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b6064820152608401620004ff565b620006888460405180606001604052806024815260200162002b426024913962001107565b60005b83518110156200081a576000848281518110620006ac57620006ac62001599565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620007545760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c72656164792065786973747300000000000000000000006064820152608401620004ff565b6040805180820182526001600160a01b03808a16825261ffff80881660208085019182526001600160e01b0319881660009081528b8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180880180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905583620007ff8162001514565b94505050508080620008119062001539565b9150506200068b565b5050505050565b6000815111620008775760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b60008051602062002b228339815191526001600160a01b038316620008f85760405162461bcd60e51b815260206004820152603060248201527f4c69624469616d6f6e644375743a205265706c6163652066616365742063616e60448201526f2774206265206164647265737328302960801b6064820152608401620004ff565b6200091d8360405180606001604052806028815260200162002b8e6028913962001107565b60005b825181101562000b0a57600083828151811062000941576200094162001599565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031630811415620009dd5760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b6064820152608401620004ff565b856001600160a01b0316816001600160a01b0316141562000a565760405162461bcd60e51b8152602060048201526038602482015260008051602062002b0283398151915260448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401620004ff565b6001600160a01b03811662000ac35760405162461bcd60e51b8152602060048201526038602482015260008051602062002b0283398151915260448201527f6374696f6e207468617420646f65736e277420657869737400000000000000006064820152608401620004ff565b506001600160e01b031916600090815260208390526040902080546001600160a01b0319166001600160a01b0386161790558062000b018162001539565b91505062000920565b50505050565b600081511162000b665760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a5460008051602062002b22833981519152906001600160a01b0384161562000c185760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d7573742062652061646472657373283029000000000000000000006064820152608401620004ff565b60005b83518110156200081a57600084828151811062000c3c5762000c3c62001599565b6020908102919091018101516001600160e01b0319811660009081528683526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff16938201939093529092509062000d025760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401620004ff565b80516001600160a01b031630141562000d765760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526e3a30b1363290333ab731ba34b7b71760891b6064820152608401620004ff565b8362000d8281620014bd565b94505083816020015161ffff161462000e6757600085600101858154811062000daf5762000daf62001599565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508086600101836020015161ffff168154811062000df55762000df562001599565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529087905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b8460010180548062000e7d5762000e7d62001583565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291859052506040902080546001600160b01b03191690558062000edf8162001539565b91505062000c1b565b6001600160a01b03821662000f725780511562000f6e5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d707479000000006064820152608401620004ff565b5050565b600081511162000feb5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f7420616464726573732830290000006064820152608401620004ff565b6001600160a01b03821630146200102157620010218260405180606001604052806028815260200162002b666028913962001107565b600080836001600160a01b0316836040516200103e91906200134d565b600060405180830381855af49150503d80600081146200107b576040519150601f19603f3d011682016040523d82523d6000602084013e62001080565b606091505b50915091508162000b0a57805115620010af578060405162461bcd60e51b8152600401620004ff919062001472565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b6064820152608401620004ff565b813b818162000b0a5760405162461bcd60e51b8152600401620004ff919062001472565b8280546200113990620014d7565b90600052602060002090601f0160209004810192826200115d5760008555620011a8565b82601f106200117857805160ff1916838001178555620011a8565b82800160010185558215620011a8579182015b82811115620011a85782518255916020019190600101906200118b565b50620011b6929150620011ba565b5090565b5b80821115620011b65760008155600101620011bb565b80516001600160a01b0381168114620011e957600080fd5b919050565b600080600080600080600060e0888a0312156200120a57600080fd5b6200121588620011d1565b96506200122560208901620011d1565b9550604088015180151581146200123b57600080fd5b94506200124b60608901620011d1565b93506200125b60808901620011d1565b92506200126b60a08901620011d1565b60c08901519092506001600160401b03808211156200128957600080fd5b818a0191508a601f8301126200129e57600080fd5b815181811115620012b357620012b3620015af565b604051601f8201601f19908116603f01168101908382118183101715620012de57620012de620015af565b816040528281528d6020848701011115620012f857600080fd5b6200130b8360208301602088016200148e565b809550505050505092959891949750929550565b60008151808452620013398160208601602086016200148e565b601f01601f19169290920160200192915050565b60008251620013618184602087016200148e565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156200144057898403607f19018652815180516001600160a01b03168552838101518986019060038110620013dc57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156200142a5783516001600160e01b0319168252928601926001929092019190860190620013fe565b5097850197955050509082019060010162001394565b50506001600160a01b038a169088015286810360408801526200146481896200131f565b9a9950505050505050505050565b6020815260006200148760208301846200131f565b9392505050565b60005b83811015620014ab57818101518382015260200162001491565b8381111562000b0a5750506000910152565b600081620014cf57620014cf62001557565b506000190190565b600181811c90821680620014ec57607f821691505b602082108114156200150e57634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156200152f576200152f62001557565b6001019392505050565b600060001982141562001550576200155062001557565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61152d80620015d56000396000f3fe6080604052600436106100225760003560e01c80637c83c11f146100d457610029565b3661002957005b600080356001600160e01b0319168152600080516020611464833981519152602081905260409091205481906001600160a01b0316806100b05760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100cf573d6000f35b3d6000fd5b3480156100e057600080fd5b506100f46100ef3660046110dc565b6100f6565b005b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566680546000805160206114648339815191529081906001600160a01b031633146101815760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563744469616d6f6e64203a2077726f6e672073656e64657200000060448201526064016100a7565b600182600b018460405161019591906111b9565b908152604051908190036020019020805491151560ff19909216919091179055505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667c80546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611464833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566683805460ff19168615151790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667e80546001600160a01b03199081166001600160a01b03878116919091179092557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667f805482168684161790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666808054909116918416919091179055805160008051602061146483398151915290610347907f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566681906020850190611043565b50505050505050565b60005b835181101561051957600084828151811061037057610370611437565b6020026020010151602001519050600060028111156103915761039161140b565b8160028111156103a3576103a361140b565b14156103f2576103ed8583815181106103be576103be611437565b6020026020010151600001518684815181106103dc576103dc611437565b602002602001015160400151610564565b610506565b60018160028111156104065761040661140b565b1415610450576103ed85838151811061042157610421611437565b60200260200101516000015186848151811061043f5761043f611437565b6020026020010151604001516107ca565b60028160028111156104645761046461140b565b14156104ae576103ed85838151811061047f5761047f611437565b60200260200101516000015186848151811061049d5761049d611437565b602002602001015160400151610a93565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100a7565b5080610511816113da565b915050610353565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161054d939291906111d5565b60405180910390a161055f8282610e15565b505050565b60008151116105855760405162461bcd60e51b81526004016100a7906112ef565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54600080516020611464833981519152906001600160a01b0384166106225760405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b60648201526084016100a7565b6106448460405180606001604052806024815260200161148460249139611022565b60005b83518110156107c357600084828151811061066457610664611437565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156107025760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100a7565b6040805180820182526001600160a01b03808a16825261ffff80881660208085019182526001600160e01b0319881660009081528b8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180880180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff9093021916919091179055836107ab816113b8565b945050505080806107bb906113da565b915050610647565b5050505050565b60008151116107eb5760405162461bcd60e51b81526004016100a7906112ef565b6000805160206114648339815191526001600160a01b0383166108695760405162461bcd60e51b815260206004820152603060248201527f4c69624469616d6f6e644375743a205265706c6163652066616365742063616e60448201526f2774206265206164647265737328302960801b60648201526084016100a7565b61088b836040518060600160405280602881526020016114d060289139611022565b60005b8251811015610a8d5760008382815181106108ab576108ab611437565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316308114156109455760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b60648201526084016100a7565b856001600160a01b0316816001600160a01b031614156109cd5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100a7565b6001600160a01b038116610a495760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e207468617420646f65736e2774206578697374000000000000000060648201526084016100a7565b506001600160e01b031916600090815260208390526040902080546001600160a01b0319166001600160a01b03861617905580610a85816113da565b91505061088e565b50505050565b6000815111610ab45760405162461bcd60e51b81526004016100a7906112ef565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54600080516020611464833981519152906001600160a01b03841615610b5c5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100a7565b60005b83518110156107c3576000848281518110610b7c57610b7c611437565b6020908102919091018101516001600160e01b0319811660009081528683526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff169382019390935290925090610c405760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100a7565b80516001600160a01b0316301415610cb25760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526e3a30b1363290333ab731ba34b7b71760891b60648201526084016100a7565b83610cbc81611366565b94505083816020015161ffff1614610d9a576000856001018581548110610ce557610ce5611437565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508086600101836020015161ffff1681548110610d2857610d28611437565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529087905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b84600101805480610dad57610dad611421565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291859052506040902080546001600160b01b031916905580610e0d816113da565b915050610b5f565b6001600160a01b038216610e9c57805115610e985760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100a7565b5050565b6000815111610f135760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100a7565b6001600160a01b0382163014610f4557610f45826040518060600160405280602881526020016114a860289139611022565b600080836001600160a01b031683604051610f6091906111b9565b600060405180830381855af49150503d8060008114610f9b576040519150601f19603f3d011682016040523d82523d6000602084013e610fa0565b606091505b509150915081610a8d57805115610fcb578060405162461bcd60e51b81526004016100a791906112d5565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016100a7565b813b8181610a8d5760405162461bcd60e51b81526004016100a791906112d5565b82805461104f9061137d565b90600052602060002090601f01602090048101928261107157600085556110b7565b82601f1061108a57805160ff19168380011785556110b7565b828001600101855582156110b7579182015b828111156110b757825182559160200191906001019061109c565b506110c39291506110c7565b5090565b5b808211156110c357600081556001016110c8565b6000602082840312156110ee57600080fd5b813567ffffffffffffffff8082111561110657600080fd5b818401915084601f83011261111a57600080fd5b81358181111561112c5761112c61144d565b604051601f8201601f19908116603f011681019083821181831017156111545761115461144d565b8160405282815287602084870101111561116d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600081518084526111a581602086016020860161133a565b601f01601f19169290920160200192915050565b600082516111cb81846020870161133a565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156112a557898403607f19018652815180516001600160a01b0316855283810151898601906003811061124457634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156112905783516001600160e01b0319168252928601926001929092019190860190611266565b509785019795505050908201906001016111fe565b50506001600160a01b038a169088015286810360408801526112c7818961118d565b9a9950505050505050505050565b6020815260006112e8602083018461118d565b9392505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60005b8381101561135557818101518382015260200161133d565b83811115610a8d5750506000910152565b600081611375576113756113f5565b506000190190565b600181811c9082168061139157607f821691505b602082108114156113b257634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156113d0576113d06113f5565b6001019392505050565b60006000198214156113ee576113ee6113f5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666794c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465a26469706673582212205aaf9d69fcd043882079668416877732ba11fe654f6052cc8594e86b2bd6db9464736f6c634300080700334c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666794c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066a2646970667358221220b34d487f09af5582d2957d74b425361238e0d4ac46d8b6f9a7d07322f6e734a264736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106200012f5760003560e01c8063952e5d8111620000ad578063e878955e116200006c578063e878955e14620003c0578063edef67671462000415578063f2fde38b146200043a578063f7cbb1b2146200045f578063ffc53ca0146200049357600080fd5b8063952e5d811462000306578063a5207df5146200032b578063b2f3f80c146200034d578063c50441ae1462000376578063d8ded0f3146200039b57600080fd5b806365a3596411620000fa57806365a3596414620001fd5780636c352513146200025b578063715018a6146200029a57806386e3e71214620002b25780638da5cb5b14620002e657600080fd5b806307f30b17146200013c57806311f6903914620001635780634badfeb2146200019d5780634fd0809214620001d857600080fd5b366200013757005b600080fd5b3480156200014957600080fd5b50620001616200015b366004620015ea565b620004d2565b005b3480156200017057600080fd5b50620001886200018236600462001544565b620005fc565b60405190151581526020015b60405180910390f35b348015620001aa57600080fd5b50600554620001bf906001600160801b031681565b6040516001600160801b03909116815260200162000194565b348015620001e557600080fd5b5062000161620001f736600462001451565b62000675565b3480156200020a57600080fd5b50620002426200021c36600462001326565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b6040516001600160a01b03909116815260200162000194565b3480156200026857600080fd5b50620001886200027a366004620015bb565b600b60209081526000928352604080842090915290825290205460ff1681565b348015620002a757600080fd5b506200016162000ab1565b348015620002bf57600080fd5b50620002d7620002d1366004620014fb565b62000aec565b60405162000194919062001722565b348015620002f357600080fd5b506000546001600160a01b031662000242565b3480156200031357600080fd5b5062000161620003253660046200135f565b62000b76565b3480156200033857600080fd5b5060085462000242906001600160a01b031681565b3480156200035a57600080fd5b50600554620001bf90600160801b90046001600160801b031681565b3480156200038357600080fd5b50620001616200039536600462001326565b62000e98565b348015620003a857600080fd5b5062000161620003ba366004620012e1565b62000ef0565b348015620003cd57600080fd5b5062000188620003df36600462001544565b8251602081850181018051600d825292820195820195909520919094528352600091825260408083209093528152205460ff1681565b3480156200042257600080fd5b50620002d762000434366004620015a1565b62000f3f565b3480156200044757600080fd5b506200016162000459366004620012e1565b62000fad565b3480156200046c57600080fd5b50620001886200047e366004620012e1565b60046020526000908152604090205460ff1681565b348015620004a057600080fd5b5062000188620004b236600462001326565b805160208183018101805160068252928201919093012091525460ff1681565b6000546001600160a01b03163314620005085760405162461bcd60e51b8152600401620004ff9062001771565b60405180910390fd5b6000821180156200051a575060008151115b620005585760405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420656e74727960981b6044820152606401620004ff565b6000828152600a60209081526040909120825162000579928401906200109f565b5060005b8151811015620005f7576000838152600b60205260408120835160019290859085908110620005b057620005b062001889565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620005ee816200185f565b9150506200057d565b505050565b6000828152600b602090815260408083206001600160a01b038516845290915281205460ff16806200066d5750600d846040516200063b919062001663565b908152604080516020928190038301902060008681529083528181206001600160a01b038616825290925290205460ff165b949350505050565b600154604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637be5d8d960e11b179052905160009283926001600160a01b0390911691620006d0919062001663565b6000604051808303816000865af19150503d80600081146200070f576040519150601f19603f3d011682016040523d82523d6000602084013e62000714565b606091505b509150915081620007395760405162461bcd60e51b8152600401620004ff90620017a6565b808060200190518101906200074f919062001306565b9150816200079c5760405162461bcd60e51b81526020600482015260196024820152783737ba1030b8383937bb32b21030b838103932bb34b2bbb2b960391b6044820152606401620004ff565b60006001600160a01b031660078a604051620007b9919062001663565b908152604051908190036020019020546001600160a01b031614620008215760405162461bcd60e51b815260206004820152601d60248201527f70726f6a656374206861642061206469616d6f6e6420616c72656164790000006044820152606401620004ff565b60068960405162000833919062001663565b9081526040519081900360200190205460ff166200088d5760405162461bcd60e51b81526020600482015260166024820152751c1c9bda9958dd08139195081b9bdd081b5a5b9d195960521b6044820152606401620004ff565b6002546001600160a01b03167fa116094cad7080180cb4829b84fc5b6862826b05e6b82452d0fd66c6b40a9154338b888888604051602401620008d5959493929190620016dc565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905162000915919062001663565b6000604051808303816000865af19150503d806000811462000954576040519150601f19603f3d011682016040523d82523d6000602084013e62000959565b606091505b509092509050816200097f5760405162461bcd60e51b8152600401620004ff90620017a6565b8080602001905181019062000995919062001306565b915081620009e65760405162461bcd60e51b815260206004820181905260248201527f4170704469616d6f6e64203a206e6f7420617070726f766564206465706c6f796044820152606401620004ff565b600080546001600160a01b0316878a8a600160009054906101000a90046001600160a01b0316600360009054906101000a90046001600160a01b03168f60405162000a319062001109565b62000a43979695949392919062001681565b604051809103906000f08015801562000a60573d6000803e3d6000fd5b5090508060078b60405162000a76919062001663565b90815260405190819003602001902080546001600160a01b03929092166001600160a01b031990921691909117905550505050505050505050565b6000546001600160a01b0316331462000ade5760405162461bcd60e51b8152600401620004ff9062001771565b62000aea60006200104f565b565b6060600c8360405162000b00919062001663565b9081526040805191829003602090810183206000868152908252829020805480830285018301909352828452919083018282801562000b6957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000b4a575b5050505050905092915050565b600154604080513360248083019190915282518083039091018152604490910182526020810180516001600160e01b0316637be5d8d960e11b179052905160009283926001600160a01b039091169162000bd1919062001663565b6000604051808303816000865af19150503d806000811462000c10576040519150601f19603f3d011682016040523d82523d6000602084013e62000c15565b606091505b50915091508162000c3a5760405162461bcd60e51b8152600401620004ff90620017a6565b60008180602001905181019062000c52919062001306565b90508062000c9f5760405162461bcd60e51b81526020600482015260196024820152783737ba1030b8383937bb32b21030b838103932bb34b2bbb2b960391b6044820152606401620004ff565b6000855111801562000cb2575083518551145b62000cf75760405162461bcd60e51b81526020600482015260146024820152731a5b9d985b1a59081b195b99dd1a1cc81cd95b9d60621b6044820152606401620004ff565b6000805b865181101562000e8e5785818151811062000d1a5762000d1a62001889565b6020026020010151600c8960405162000d34919062001663565b9081526020016040518091039020600089848151811062000d595762000d5962001889565b60200260200101518152602001908152602001600020908051906020019062000d849291906200109f565b50600091505b85818151811062000d9f5762000d9f62001889565b60200260200101515182101562000e79576001600d8960405162000dc4919062001663565b9081526020016040518091039020600089848151811062000de95762000de962001889565b60200260200101518152602001908152602001600020600088848151811062000e165762000e1662001889565b6020026020010151858151811062000e325762000e3262001889565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558162000e70816200185f565b92505062000d8a565b8062000e85816200185f565b91505062000cfb565b5050505050505050565b6001546001600160a01b0316336001600160a01b03161462000eb957600080fd5b600160068260405162000ecd919062001663565b908152604051908190036020019020805491151560ff1990921691909117905550565b6000546001600160a01b0316331462000f1d5760405162461bcd60e51b8152600401620004ff9062001771565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600a602090815260409182902080548351818402810184019094528084526060939283018282801562000fa157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000f82575b50505050509050919050565b6000546001600160a01b0316331462000fda5760405162461bcd60e51b8152600401620004ff9062001771565b6001600160a01b038116620010415760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004ff565b6200104c816200104f565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215620010f7579160200282015b82811115620010f757825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620010c0565b506200110592915062001117565b5090565b612bd680620018c583390190565b5b8082111562001105576000815560010162001118565b80356001600160a01b03811681146200114657600080fd5b919050565b600082601f8301126200115d57600080fd5b8135602062001176620011708362001805565b620017d1565b80838252828201915082860187848660051b89010111156200119757600080fd5b60005b85811015620011c157620011ae826200112e565b845292840192908401906001016200119a565b5090979650505050505050565b600082601f830112620011e057600080fd5b81356020620011f3620011708362001805565b80838252828201915082860187848660051b89010111156200121457600080fd5b6000805b868110156200125c57823567ffffffffffffffff81111562001238578283fd5b620012488b88838d01016200114b565b865250938501939185019160010162001218565b509198975050505050505050565b600082601f8301126200127c57600080fd5b813567ffffffffffffffff8111156200129957620012996200189f565b620012ae601f8201601f1916602001620017d1565b818152846020838601011115620012c457600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215620012f457600080fd5b620012ff826200112e565b9392505050565b6000602082840312156200131957600080fd5b8151620012ff81620018b5565b6000602082840312156200133957600080fd5b813567ffffffffffffffff8111156200135157600080fd5b6200066d848285016200126a565b6000806000606084860312156200137557600080fd5b833567ffffffffffffffff808211156200138e57600080fd5b6200139c878388016200126a565b9450602091508186013581811115620013b457600080fd5b8601601f81018813620013c657600080fd5b8035620013d7620011708262001805565b8082825285820191508584018b878560051b8701011115620013f857600080fd5b600094505b838510156200141d578035835260019490940193918601918601620013fd565b50965050505060408601359150808211156200143857600080fd5b506200144786828701620011ce565b9150509250925092565b600080600080600080600060e0888a0312156200146d57600080fd5b873567ffffffffffffffff8111156200148557600080fd5b620014938a828b016200126a565b9750506020880135620014a681620018b5565b9550620014b6604089016200112e565b9450620014c6606089016200112e565b93506080880135925060a0880135915060c088013560ff81168114620014eb57600080fd5b8091505092959891949750929550565b600080604083850312156200150f57600080fd5b823567ffffffffffffffff8111156200152757600080fd5b62001535858286016200126a565b95602094909401359450505050565b6000806000606084860312156200155a57600080fd5b833567ffffffffffffffff8111156200157257600080fd5b62001580868287016200126a565b9350506020840135915062001598604085016200112e565b90509250925092565b600060208284031215620015b457600080fd5b5035919050565b60008060408385031215620015cf57600080fd5b82359150620015e1602084016200112e565b90509250929050565b60008060408385031215620015fe57600080fd5b82359150602083013567ffffffffffffffff8111156200161d57600080fd5b6200162b858286016200114b565b9150509250929050565b600081518084526200164f8160208601602086016200182c565b601f01601f19169290920160200192915050565b60008251620016778184602087016200182c565b9190910192915050565b6001600160a01b0388811682528781166020830152861515604083015285811660608301528481166080830152831660a082015260e060c08201819052600090620016cf9083018462001635565b9998505050505050505050565b6001600160a01b038616815260a060208201819052600090620017029083018762001635565b604083019590955250606081019290925260ff1660809091015292915050565b6020808252825182820181905260009190848201906040850190845b81811015620017655783516001600160a01b0316835292840192918401916001016200173e565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601190820152701d5b9cdd58d8d95cdcd99d5b0818d85b1b607a1b604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715620017fd57620017fd6200189f565b604052919050565b600067ffffffffffffffff8211156200182257620018226200189f565b5060051b60200190565b60005b83811015620018495781810151838201526020016200182f565b8381111562001859576000848401525b50505050565b60006000198214156200188257634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146200104c57600080fdfe608060405260405162002bd638038062002bd68339810160408190526200002691620011ee565b6200003c876200017560201b620001ba1760201c565b620000568585858585620001f960201b6200023d1760201c565b604080516001808252818301909252600091816020015b604080516060808201835260008083526020830152918101919091528152602001906001900390816200006d5750506040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b81600081518110620000e057620000e062001599565b6001600160e01b031990921660209283029190910182015260408051606081019091526001600160a01b038a16815290810160008152602001828152508260008151811062000133576200013362001599565b602002602001018190525062000166826000604051806020016040528060008152506200030f60201b620003501760201c565b505050505050505050620015c5565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667c80546001600160a01b031981166001600160a01b0384811691821790935560405160008051602062002b22833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566683805460ff19168615151790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667e80546001600160a01b03199081166001600160a01b03878116919091179092557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667f805482168684161790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666808054909116918416919091179055805160008051602062002b228339815191529062000306907f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666819060208501906200112b565b50505050505050565b60005b83518110156200051e57600084828151811062000333576200033362001599565b6020026020010151602001519050600060028111156200035757620003576200156d565b8160028111156200036c576200036c6200156d565b1415620003cb57620003c58583815181106200038c576200038c62001599565b602002602001015160000151868481518110620003ad57620003ad62001599565b6020026020010151604001516200056d60201b60201c565b62000508565b6001816002811115620003e257620003e26200156d565b14156200043b57620003c585838151811062000402576200040262001599565b60200260200101516000015186848151811062000423576200042362001599565b6020026020010151604001516200082160201b60201c565b60028160028111156200045257620004526200156d565b1415620004ab57620003c585838151811062000472576200047262001599565b60200260200101516000015186848151811062000493576200049362001599565b60200260200101516040015162000b1060201b60201c565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084015b60405180910390fd5b5080620005158162001539565b91505062000312565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405162000554939291906200136b565b60405180910390a162000568828262000ee8565b505050565b6000815111620005c35760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a5460008051602062002b22833981519152906001600160a01b038416620006635760405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b6064820152608401620004ff565b620006888460405180606001604052806024815260200162002b426024913962001107565b60005b83518110156200081a576000848281518110620006ac57620006ac62001599565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620007545760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60448201527f6e207468617420616c72656164792065786973747300000000000000000000006064820152608401620004ff565b6040805180820182526001600160a01b03808a16825261ffff80881660208085019182526001600160e01b0319881660009081528b8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180880180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff909302191691909117905583620007ff8162001514565b94505050508080620008119062001539565b9150506200068b565b5050505050565b6000815111620008775760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b60008051602062002b228339815191526001600160a01b038316620008f85760405162461bcd60e51b815260206004820152603060248201527f4c69624469616d6f6e644375743a205265706c6163652066616365742063616e60448201526f2774206265206164647265737328302960801b6064820152608401620004ff565b6200091d8360405180606001604052806028815260200162002b8e6028913962001107565b60005b825181101562000b0a57600083828151811062000941576200094162001599565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031630811415620009dd5760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b6064820152608401620004ff565b856001600160a01b0316816001600160a01b0316141562000a565760405162461bcd60e51b8152602060048201526038602482015260008051602062002b0283398151915260448201527f6374696f6e20776974682073616d652066756e6374696f6e00000000000000006064820152608401620004ff565b6001600160a01b03811662000ac35760405162461bcd60e51b8152602060048201526038602482015260008051602062002b0283398151915260448201527f6374696f6e207468617420646f65736e277420657869737400000000000000006064820152608401620004ff565b506001600160e01b031916600090815260208390526040902080546001600160a01b0319166001600160a01b0386161790558062000b018162001539565b91505062000920565b50505050565b600081511162000b665760405162461bcd60e51b815260206004820152602b602482015260008051602062002bb683398151915260448201526a1858d95d081d1bc818dd5d60aa1b6064820152608401620004ff565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a5460008051602062002b22833981519152906001600160a01b0384161562000c185760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260448201527f657373206d7573742062652061646472657373283029000000000000000000006064820152608401620004ff565b60005b83518110156200081a57600084828151811062000c3c5762000c3c62001599565b6020908102919091018101516001600160e01b0319811660009081528683526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff16938201939093529092509062000d025760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e27742065786973740000000000000000006064820152608401620004ff565b80516001600160a01b031630141562000d765760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526e3a30b1363290333ab731ba34b7b71760891b6064820152608401620004ff565b8362000d8281620014bd565b94505083816020015161ffff161462000e6757600085600101858154811062000daf5762000daf62001599565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508086600101836020015161ffff168154811062000df55762000df562001599565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529087905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b8460010180548062000e7d5762000e7d62001583565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291859052506040902080546001600160b01b03191690558062000edf8162001539565b91505062000c1b565b6001600160a01b03821662000f725780511562000f6e5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d707479000000006064820152608401620004ff565b5050565b600081511162000feb5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f7420616464726573732830290000006064820152608401620004ff565b6001600160a01b03821630146200102157620010218260405180606001604052806028815260200162002b666028913962001107565b600080836001600160a01b0316836040516200103e91906200134d565b600060405180830381855af49150503d80600081146200107b576040519150601f19603f3d011682016040523d82523d6000602084013e62001080565b606091505b50915091508162000b0a57805115620010af578060405162461bcd60e51b8152600401620004ff919062001472565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b6064820152608401620004ff565b813b818162000b0a5760405162461bcd60e51b8152600401620004ff919062001472565b8280546200113990620014d7565b90600052602060002090601f0160209004810192826200115d5760008555620011a8565b82601f106200117857805160ff1916838001178555620011a8565b82800160010185558215620011a8579182015b82811115620011a85782518255916020019190600101906200118b565b50620011b6929150620011ba565b5090565b5b80821115620011b65760008155600101620011bb565b80516001600160a01b0381168114620011e957600080fd5b919050565b600080600080600080600060e0888a0312156200120a57600080fd5b6200121588620011d1565b96506200122560208901620011d1565b9550604088015180151581146200123b57600080fd5b94506200124b60608901620011d1565b93506200125b60808901620011d1565b92506200126b60a08901620011d1565b60c08901519092506001600160401b03808211156200128957600080fd5b818a0191508a601f8301126200129e57600080fd5b815181811115620012b357620012b3620015af565b604051601f8201601f19908116603f01168101908382118183101715620012de57620012de620015af565b816040528281528d6020848701011115620012f857600080fd5b6200130b8360208301602088016200148e565b809550505050505092959891949750929550565b60008151808452620013398160208601602086016200148e565b601f01601f19169290920160200192915050565b60008251620013618184602087016200148e565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156200144057898403607f19018652815180516001600160a01b03168552838101518986019060038110620013dc57634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156200142a5783516001600160e01b0319168252928601926001929092019190860190620013fe565b5097850197955050509082019060010162001394565b50506001600160a01b038a169088015286810360408801526200146481896200131f565b9a9950505050505050505050565b6020815260006200148760208301846200131f565b9392505050565b60005b83811015620014ab57818101518382015260200162001491565b8381111562000b0a5750506000910152565b600081620014cf57620014cf62001557565b506000190190565b600181811c90821680620014ec57607f821691505b602082108114156200150e57634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156200152f576200152f62001557565b6001019392505050565b600060001982141562001550576200155062001557565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61152d80620015d56000396000f3fe6080604052600436106100225760003560e01c80637c83c11f146100d457610029565b3661002957005b600080356001600160e01b0319168152600080516020611464833981519152602081905260409091205481906001600160a01b0316806100b05760405162461bcd60e51b815260206004820181905260248201527f4469616d6f6e643a2046756e6374696f6e20646f6573206e6f7420657869737460448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100cf573d6000f35b3d6000fd5b3480156100e057600080fd5b506100f46100ef3660046110dc565b6100f6565b005b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566680546000805160206114648339815191529081906001600160a01b031633146101815760405162461bcd60e51b815260206004820152601d60248201527f50726f6a6563744469616d6f6e64203a2077726f6e672073656e64657200000060448201526064016100a7565b600182600b018460405161019591906111b9565b908152604051908190036020019020805491151560ff19909216919091179055505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667c80546001600160a01b031981166001600160a01b03848116918217909355604051600080516020611464833981519152939092169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566683805460ff19168615151790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667e80546001600160a01b03199081166001600160a01b03878116919091179092557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667f805482168684161790557f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666808054909116918416919091179055805160008051602061146483398151915290610347907f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f0036566681906020850190611043565b50505050505050565b60005b835181101561051957600084828151811061037057610370611437565b6020026020010151602001519050600060028111156103915761039161140b565b8160028111156103a3576103a361140b565b14156103f2576103ed8583815181106103be576103be611437565b6020026020010151600001518684815181106103dc576103dc611437565b602002602001015160400151610564565b610506565b60018160028111156104065761040661140b565b1415610450576103ed85838151811061042157610421611437565b60200260200101516000015186848151811061043f5761043f611437565b6020026020010151604001516107ca565b60028160028111156104645761046461140b565b14156104ae576103ed85838151811061047f5761047f611437565b60200260200101516000015186848151811061049d5761049d611437565b602002602001015160400151610a93565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016100a7565b5080610511816113da565b915050610353565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161054d939291906111d5565b60405180910390a161055f8282610e15565b505050565b60008151116105855760405162461bcd60e51b81526004016100a7906112ef565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54600080516020611464833981519152906001600160a01b0384166106225760405162461bcd60e51b815260206004820152602c60248201527f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260448201526b65206164647265737328302960a01b60648201526084016100a7565b6106448460405180606001604052806024815260200161148460249139611022565b60005b83518110156107c357600084828151811061066457610664611437565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156107025760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016100a7565b6040805180820182526001600160a01b03808a16825261ffff80881660208085019182526001600160e01b0319881660009081528b8252958620945185549251909316600160a01b026001600160b01b0319909216929093169190911717909155600180880180549182018155835291206008820401805460e085901c60046007909416939093026101000a92830263ffffffff9093021916919091179055836107ab816113b8565b945050505080806107bb906113da565b915050610647565b5050505050565b60008151116107eb5760405162461bcd60e51b81526004016100a7906112ef565b6000805160206114648339815191526001600160a01b0383166108695760405162461bcd60e51b815260206004820152603060248201527f4c69624469616d6f6e644375743a205265706c6163652066616365742063616e60448201526f2774206265206164647265737328302960801b60648201526084016100a7565b61088b836040518060600160405280602881526020016114d060289139611022565b60005b8251811015610a8d5760008382815181106108ab576108ab611437565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b0316308114156109455760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b60648201526084016100a7565b856001600160a01b0316816001600160a01b031614156109cd5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016100a7565b6001600160a01b038116610a495760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e207468617420646f65736e2774206578697374000000000000000060648201526084016100a7565b506001600160e01b031916600090815260208390526040902080546001600160a01b0319166001600160a01b03861617905580610a85816113da565b91505061088e565b50505050565b6000815111610ab45760405162461bcd60e51b81526004016100a7906112ef565b7f1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f003656667a54600080516020611464833981519152906001600160a01b03841615610b5c5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016100a7565b60005b83518110156107c3576000848281518110610b7c57610b7c611437565b6020908102919091018101516001600160e01b0319811660009081528683526040908190208151808301909252546001600160a01b038116808352600160a01b90910461ffff169382019390935290925090610c405760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016100a7565b80516001600160a01b0316301415610cb25760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526e3a30b1363290333ab731ba34b7b71760891b60648201526084016100a7565b83610cbc81611366565b94505083816020015161ffff1614610d9a576000856001018581548110610ce557610ce5611437565b90600052602060002090600891828204019190066004029054906101000a900460e01b90508086600101836020015161ffff1681548110610d2857610d28611437565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c92909202939093179055838201516001600160e01b03199390931681529087905260409020805461ffff60a01b1916600160a01b61ffff909316929092029190911790555b84600101805480610dad57610dad611421565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319909316815291859052506040902080546001600160b01b031916905580610e0d816113da565b915050610b5f565b6001600160a01b038216610e9c57805115610e985760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100a7565b5050565b6000815111610f135760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100a7565b6001600160a01b0382163014610f4557610f45826040518060600160405280602881526020016114a860289139611022565b600080836001600160a01b031683604051610f6091906111b9565b600060405180830381855af49150503d8060008114610f9b576040519150601f19603f3d011682016040523d82523d6000602084013e610fa0565b606091505b509150915081610a8d57805115610fcb578060405162461bcd60e51b81526004016100a791906112d5565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016100a7565b813b8181610a8d5760405162461bcd60e51b81526004016100a791906112d5565b82805461104f9061137d565b90600052602060002090601f01602090048101928261107157600085556110b7565b82601f1061108a57805160ff19168380011785556110b7565b828001600101855582156110b7579182015b828111156110b757825182559160200191906001019061109c565b506110c39291506110c7565b5090565b5b808211156110c357600081556001016110c8565b6000602082840312156110ee57600080fd5b813567ffffffffffffffff8082111561110657600080fd5b818401915084601f83011261111a57600080fd5b81358181111561112c5761112c61144d565b604051601f8201601f19908116603f011681019083821181831017156111545761115461144d565b8160405282815287602084870101111561116d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600081518084526111a581602086016020860161133a565b601f01601f19169290920160200192915050565b600082516111cb81846020870161133a565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156112a557898403607f19018652815180516001600160a01b0316855283810151898601906003811061124457634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156112905783516001600160e01b0319168252928601926001929092019190860190611266565b509785019795505050908201906001016111fe565b50506001600160a01b038a169088015286810360408801526112c7818961118d565b9a9950505050505050505050565b6020815260006112e8602083018461118d565b9392505050565b6020808252602b908201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660408201526a1858d95d081d1bc818dd5d60aa1b606082015260800190565b60005b8381101561135557818101518382015260200161133d565b83811115610a8d5750506000910152565b600081611375576113756113f5565b506000190190565b600181811c9082168061139157607f821691505b602082108114156113b257634e487b7160e01b600052602260045260246000fd5b50919050565b600061ffff808316818114156113d0576113d06113f5565b6001019392505050565b60006000198214156113ee576113ee6113f5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666794c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465a26469706673582212205aaf9d69fcd043882079668416877732ba11fe654f6052cc8594e86b2bd6db9464736f6c634300080700334c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e1e4e032ead9f5cbf2bef2ad76af6882907961bfa4f161b1b0cdb1f00365666794c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f64654c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e2066a2646970667358221220b34d487f09af5582d2957d74b425361238e0d4ac46d8b6f9a7d07322f6e734a264736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 273,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 4663,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "projectNFTAddr",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4665,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "verifyAddr",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4667,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "pathwayNFTAddr",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 4671,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "reviewers",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4673,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "multiSigThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint128"
      },
      {
        "astId": 4675,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "numReviewers",
        "offset": 16,
        "slot": "5",
        "type": "t_uint128"
      },
      {
        "astId": 4679,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "projApproved",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 4683,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "projectDiamondAddrs",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 4685,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "appSigningAddr",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 4687,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "sponsorSFT",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 4692,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "approvedERC20sPerChain",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 4698,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "isERC20ApprovedOnChainId",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 4705,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "projectApprovedERC20sPerChain",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_array(t_address)dyn_storage))"
      },
      {
        "astId": 4713,
        "contract": "contracts/AppDiamond.sol:AppDiamond",
        "label": "isProjectERC20ApprovedOnChainId",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_address,t_bool)))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_array(t_address)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(uint256 => address[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_uint256,t_mapping(t_address,t_bool)))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(uint256 => mapping(address => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}