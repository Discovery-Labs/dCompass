# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ApproveBadgeInput {
  badgeApproverSignature: String!
  id: String!
}

input ApproveProjectInput {
  chainId: String!
  id: String!
  reviewerSignature: String!
  tokenUris: [String!]!
}

type ApproveProjectOutput {
  id: String!
  isFeatured: Boolean!
  tokenUris: [String!]!
}

input ApproveQuestInput {
  id: String!
  questApproverSignature: String!
}

type Badge {
  """Identifies the date and time when the object was created."""
  createdAt: String!
  createdBy: String!
  description: String!
  difficulty: BadgeDifficultyEnum!
  id: String!
  image: String!
  isPending: Boolean
  prerequisites: [String!]
  projectId: String!
  quests: [Quest!]
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

"""
The difficulty of a badge, from beginner to wizard where wizard is the most difficult mode
"""
enum BadgeDifficultyEnum {
  ADVANCED
  BEGINNER
  EXPERT
  INTERMEDIATE
  WIZARD
}

input CreateBadgeInput {
  badgeCreatorSignature: String!
  id: String!
}

input CreateProjectInput {
  creatorSignature: String!
  id: String!
  tokenUris: [String!]!
}

type CreateProjectOutput {
  id: String!
  isFeatured: Boolean!
  tokenUris: [String!]!
}

input CreateQuestInput {
  id: String!
  questCreatorSignature: String!
}

input CreateTagInput {
  color: String!
  label: String!
  value: String!
}

input CreateTagsInput {
  tags: [CreateTagInput!]!
}

input EditProjectInput {
  color: String
  description: String
  discord: String
  editorSignature: String!
  github: String
  id: String!
  logo: String
  name: String
  squads: [ProjectSquadsInput!]
  tokenUris: [String!]
  twitter: String
  website: String
  whitepaper: String
}

type Mutation {
  """Approve a new Badge in dCompass"""
  approveBadge(input: ApproveBadgeInput!): Badge

  """Approves a new Project in dCompass"""
  approveProject(input: ApproveProjectInput!): [ApproveProjectOutput!]

  """Approve a new Quest in dCompass"""
  approveQuest(input: ApproveQuestInput!): Quest

  """Create a new Badge in dCompass"""
  createBadge(input: CreateBadgeInput!): Badge

  """Create a new Project in dCompass"""
  createProject(input: CreateProjectInput!): [CreateProjectOutput!]

  """Create a new Snapshot Voter Quest in dCompass"""
  createSnapshotVoterQuest(input: CreateQuestInput!): SnapshotVoterQuest

  """Create a new Tag in Discovery"""
  createTag(input: CreateTagInput!): Tag

  """Creates multiple new Tags in Discovery"""
  createTags(input: CreateTagsInput!): [Tag!]

  """Edit project in dCompass"""
  editProject(input: EditProjectInput!): Project
}

type Project {
  badges: [Badge!]
  color: String
  contracts: [String!]!

  """Identifies the date and time when the object was created."""
  createdAt: String!
  createdBy: String!
  description: String!
  discord: String
  github: String!
  id: String!
  isFeatured: Boolean!
  logo: String
  name: String!
  peerProjects: [String!]
  repos: [String!]
  squads: [Squad!]!
  tags: [Tag!]
  tokenUris: [String!]!
  twitter: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
  updatedBy: String!
  website: String!
  whitepaper: String
}

input ProjectSquadsInput {
  image: String!
  members: [String!]!
  name: String!
}

type Query {
  """Gets all the badges in dCompass"""
  getAllBadgesByProjectId(projectId: String!): [Badge!]

  """Gets all the projects in dCompass"""
  getAllProjects: [Project!]

  """Gets all the quests in dCompass"""
  getAllQuestsByBadgeId(badgeId: String!): [Quest!]

  """Gets all the tags in Discovery"""
  getAllTags: [Tag!]

  """Gets a badge by its Stream ID"""
  getBadgeById(badgeId: String!): Badge

  """Gets a project by its Stream ID"""
  getProjectById(projectId: String!): Project
}

type Quest {
  badgeId: String!
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  questType: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type SnapshotVoterQuest {
  badgeId: String!
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  proposalId: String!
  questType: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Squad {
  """Identifies the date and time when the object was created."""
  createdAt: String!
  image: String
  members: [String!]!
  name: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Tag {
  color: String!

  """Identifies the date and time when the object was created."""
  createdAt: String!
  id: String!
  label: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
  value: String!
}
