# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ApprovePathwayInput {
  chainId: Int!
  id: String!
  namespace: String
  pathwayApproverSignature: String!
}

input ApproveProjectInput {
  chainId: String!
  id: String!
  reviewerSignature: String!
  tokenUris: [String!]!
}

type ApproveProjectOutput {
  id: String!
  isFeatured: Boolean!
  tokenUris: [String!]!
}

input ApproveQuestInput {
  id: String!
  questApproverSignature: String!
}

input CreatePathwayInput {
  id: String!
  pathwayCreatorSignature: String!
}

input CreateProjectInput {
  creatorSignature: String!
  id: String!
  tokenUris: [String!]!
}

type CreateProjectOutput {
  id: String!
  isFeatured: Boolean!
  tokenUris: [String!]!
}

input CreateQuestInput {
  id: String!
  questCreatorSignature: String!
}

input CreateTagInput {
  color: String!
  label: String!
  value: String!
}

input CreateTagsInput {
  tags: [CreateTagInput!]!
}

input EditProjectInput {
  color: String
  description: String
  discord: String
  editorSignature: String!
  github: String
  id: String!
  logo: String
  name: String
  squads: [ProjectSquadsInput!]
  tokenUris: [String!]
  twitter: String
  website: String
  whitepaper: String
}

type ExpandedServerSignature {
  r: String!
  s: String!
  v: Int!
}

type GithubContributorQuest {
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  githubOrgId: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  pathwayId: String!
  questType: String!
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Mutation {
  """Approve a new Pathway in dCompass"""
  approvePathway(input: ApprovePathwayInput!): Pathway

  """Approves a new Project in dCompass"""
  approveProject(input: ApproveProjectInput!): [ApproveProjectOutput!]

  """Approve a new Quest in dCompass"""
  approveQuest(input: ApproveQuestInput!): Quest

  """Create a new Github Contributor Quest in dCompass"""
  createGithubContributorQuest(input: CreateQuestInput!): GithubContributorQuest

  """Create a new NFT Owner Quest in dCompass"""
  createNFTOwnerQuest(input: CreateQuestInput!): NFTOwnerQuest

  """Create a new Pathway in dCompass"""
  createPathway(input: CreatePathwayInput!): Pathway

  """Create a new Project in dCompass"""
  createProject(input: CreateProjectInput!): [CreateProjectOutput!]

  """Create a new Quiz quest in dCompass"""
  createQuizQuest(input: CreateQuestInput!): QuizQuest

  """Create a new Snapshot Voter Quest in dCompass"""
  createSnapshotVoterQuest(input: CreateQuestInput!): SnapshotVoterQuest

  """Create a new Tag in Discovery"""
  createTag(input: CreateTagInput!): Tag

  """Creates multiple new Tags in Discovery"""
  createTags(input: CreateTagsInput!): [Tag!]

  """Edit project in dCompass"""
  editProject(input: EditProjectInput!): Project

  """Submits quest answers"""
  submitQuestAnswers(input: QuestAnswersSubmitionInput!): Boolean!

  """Verify a new Pathway right before minting in dCompass"""
  verifyPathway(input: VerifyPathwayInput!): Pathway
}

type NFTOwnerQuest {
  chainId: Int!
  collectionContractAddress: String!
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  namespace: String!
  pathwayId: String!
  questType: String!
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Pathway {
  """Identifies the date and time when the object was created."""
  createdAt: String!
  createdBy: String!
  description: String!
  difficulty: PathwayDifficultyEnum!
  expandedServerSignatures: [ExpandedServerSignature!]
  id: String!
  image: String!
  isPending: Boolean
  prerequisites: [String!]
  projectId: String!
  quests: [Quest!]
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

"""
The difficulty of a pathway, from beginner to wizard where wizard is the most difficult mode
"""
enum PathwayDifficultyEnum {
  ADVANCED
  BEGINNER
  EXPERT
  INTERMEDIATE
  WIZARD
}

type Project {
  color: String
  contracts: [String!]!

  """Identifies the date and time when the object was created."""
  createdAt: String!
  createdBy: String!
  description: String!
  discord: String
  gitbook: String
  github: String
  id: String!
  isFeatured: Boolean!
  logo: String
  members: [String!]
  name: String!
  pathways: [Pathway!]
  peerProjects: [String!]
  pendingMembers: [String!]
  repos: [String!]
  squads: [Squad!]!
  tags: [Tag!]
  tokenUris: [String!]!
  twitter: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
  updatedBy: String!
  website: String!
  whitepaper: String
}

input ProjectSquadsInput {
  image: String!
  members: [String!]!
  name: String!
}

type Query {
  """Gets all the pathways in dCompass"""
  getAllPathwaysByProjectId(projectId: String!): [Pathway!]

  """Gets all the projects in dCompass"""
  getAllProjects: [Project!]

  """Gets all the quests in dCompass"""
  getAllQuestsByPathwayId(pathwayId: String!): [Quest!]

  """Gets all the tags in Discovery"""
  getAllTags: [Tag!]

  """Return the DID of the dCompass backend server"""
  getAppDID: String

  """Gets a pathway by its Stream ID"""
  getPathwayById(pathwayId: String!): Pathway

  """Gets a project by its Stream ID"""
  getProjectById(projectId: String!): Project

  """Gets a quiz quest by its Stream ID"""
  getQuizQuestById(questId: String!): QuizQuest
}

type Quest {
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  pathwayId: String!
  questType: String!
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

input QuestAnswersSubmitionInput {
  did: String!
  questId: String!
  questionAnswers: [QuestQuestionAnswerInput!]!
}

input QuestQuestionAnswerInput {
  answer: String!
  question: String!
}

type QuizQuest {
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  pathwayId: String!
  questType: String!
  questions: [QuizQuestion!]!
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type QuizQuestion {
  answer: String!
  choices: [String!]!
  question: String!
}

type SnapshotVoterQuest {
  completedBy: [String!]

  """Identifies the date and time when the object was created."""
  createdAt: String!
  description: String!
  id: String!
  image: String!
  isPending: Boolean
  name: String!
  pathwayId: String!
  proposalId: String!
  questType: String!
  rewardAmount: Float!
  rewardCurrency: String!
  rewardUserCap: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Squad {
  """Identifies the date and time when the object was created."""
  createdAt: String!
  image: String
  members: [String!]!
  name: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
}

type Tag {
  color: String!

  """Identifies the date and time when the object was created."""
  createdAt: String!
  id: String!
  label: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: String!
  value: String!
}

input VerifyPathwayInput {
  chainId: Int!
  id: String!
  namespace: String
  pathwayMinterSignature: String!
}
